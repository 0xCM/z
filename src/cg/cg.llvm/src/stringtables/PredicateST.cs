namespace Z0.llvm.strings
{
    using System;

    using static core;

    public enum PredicateKind : uint
    {
        CallImmAddr = 0,
        FPStackf32 = 1,
        FPStackf64 = 2,
        FavorMemIndirectCall = 3,
        Has3DNow = 4,
        Has3DNowA = 5,
        HasADX = 6,
        HasAES = 7,
        HasAMXBF16 = 8,
        HasAMXINT8 = 9,
        HasAMXTILE = 10,
        HasAVX = 11,
        HasAVX1Only = 12,
        HasAVX2 = 13,
        HasAVX512 = 14,
        HasAVXVNNI = 15,
        HasBF16 = 16,
        HasBITALG = 17,
        HasBMI = 18,
        HasBMI2 = 19,
        HasBWI = 20,
        HasCDI = 21,
        HasCLDEMOTE = 22,
        HasCLFLUSHOPT = 23,
        HasCLWB = 24,
        HasCLZERO = 25,
        HasCMov = 26,
        HasCRC32 = 27,
        HasCmpxchg16b = 28,
        HasCmpxchg8b = 29,
        HasDQI = 30,
        HasENQCMD = 31,
        HasERI = 32,
        HasERMSB = 33,
        HasF16C = 34,
        HasFMA = 35,
        HasFMA4 = 36,
        HasFP16 = 37,
        HasFSGSBase = 38,
        HasFSRM = 39,
        HasFXSR = 40,
        HasFastLZCNT = 41,
        HasFastMem32 = 42,
        HasFastSHLDRotate = 43,
        HasGFNI = 44,
        HasHRESET = 45,
        HasIFMA = 46,
        HasINVPCID = 47,
        HasKL = 48,
        HasLAHFSAHF = 49,
        HasLWP = 50,
        HasLZCNT = 51,
        HasMFence = 52,
        HasMMX = 53,
        HasMOVBE = 54,
        HasMOVDIR64B = 55,
        HasMOVDIRI = 56,
        HasMWAITX = 57,
        HasPCLMUL = 58,
        HasPCONFIG = 59,
        HasPFI = 60,
        HasPOPCNT = 61,
        HasPREFETCHWT1 = 62,
        HasPTWRITE = 63,
        HasPrefetchW = 64,
        HasRDPID = 65,
        HasRDRAND = 66,
        HasRDSEED = 67,
        HasRTM = 68,
        HasSERIALIZE = 69,
        HasSGX = 70,
        HasSHA = 71,
        HasSHSTK = 72,
        HasSSE1 = 73,
        HasSSE2 = 74,
        HasSSE3 = 75,
        HasSSE41 = 76,
        HasSSE42 = 77,
        HasSSE4A = 78,
        HasSSEPrefetch = 79,
        HasSSSE3 = 80,
        HasTBM = 81,
        HasTSXLDTRK = 82,
        HasUINTR = 83,
        HasVAES = 84,
        HasVBMI = 85,
        HasVBMI2 = 86,
        HasVLX = 87,
        HasVNNI = 88,
        HasVP2INTERSECT = 89,
        HasVPCLMULQDQ = 90,
        HasVPOPCNTDQ = 91,
        HasWAITPKG = 92,
        HasWBNOINVD = 93,
        HasWIDEKL = 94,
        HasXOP = 95,
        HasXSAVE = 96,
        HasXSAVEC = 97,
        HasXSAVEOPT = 98,
        HasXSAVES = 99,
        In16BitMode = 100,
        In32BitMode = 101,
        In64BitMode = 102,
        IsLP64 = 103,
        IsNaCl = 104,
        IsNotPIC = 105,
        IsPS4 = 106,
        IsWin64 = 107,
        KernelCode = 108,
        NearData = 109,
        NoAVX = 110,
        NoAVX512 = 111,
        NoBMI2 = 112,
        NoBWI = 113,
        NoCMov = 114,
        NoDQI = 115,
        NoFMA4 = 116,
        NoHonorSignDependentRounding = 117,
        NoSSE41 = 118,
        NoSSE41_Or_OptForSize = 119,
        NoSSEPrefetch = 120,
        NoTBM = 121,
        NoVLX = 122,
        NoVLX_Or_NoBWI = 123,
        NoVLX_Or_NoDQI = 124,
        NoVLX_Or_NoVAES = 125,
        NoVLX_Or_NoVNNI = 126,
        NoVLX_Or_NoVPCLMULQDQ = 127,
        Not16BitMode = 128,
        Not64BitMode = 129,
        NotLP64 = 130,
        NotNaCl = 131,
        NotPS4 = 132,
        NotUseIndirectThunkCalls = 133,
        NotWin64 = 134,
        NotWin64WithoutFP = 135,
        OptForMinSize = 136,
        OptForSize = 137,
        OptForSpeed = 138,
        PKU = 139,
        SmallCode = 140,
        TruePredicate = 141,
        UseAVX = 142,
        UseAVX2 = 143,
        UseIncDec = 144,
        UseIndirectThunkCalls = 145,
        UseSSE1 = 146,
        UseSSE2 = 147,
        UseSSE3 = 148,
        UseSSE41 = 149,
        UseSSE42 = 150,
        UseSSSE3 = 151,
    }

    [ApiCompleteAttribute]
    public readonly struct PredicateST
    {
        public const uint EntryCount = 152;

        public const uint CharCount = 1409;

        public static MemoryAddress CharBase => address(Data);

        public static MemoryAddress OffsetBase => address(Offsets);

        public static MemoryStrings<PredicateKind> Strings => MemoryStrings.create(Offsets,Data);

        public static ReadOnlySpan<byte> Offsets => new byte[608]{0x00,0x00,0x00,0x00,0x0b,0x00,0x00,0x00,0x15,0x00,0x00,0x00,0x1f,0x00,0x00,0x00,0x33,0x00,0x00,0x00,0x3b,0x00,0x00,0x00,0x44,0x00,0x00,0x00,0x4a,0x00,0x00,0x00,0x50,0x00,0x00,0x00,0x5a,0x00,0x00,0x00,0x64,0x00,0x00,0x00,0x6e,0x00,0x00,0x00,0x74,0x00,0x00,0x00,0x7f,0x00,0x00,0x00,0x86,0x00,0x00,0x00,0x8f,0x00,0x00,0x00,0x99,0x00,0x00,0x00,0xa0,0x00,0x00,0x00,0xa9,0x00,0x00,0x00,0xaf,0x00,0x00,0x00,0xb6,0x00,0x00,0x00,0xbc,0x00,0x00,0x00,0xc2,0x00,0x00,0x00,0xcd,0x00,0x00,0x00,0xda,0x00,0x00,0x00,0xe1,0x00,0x00,0x00,0xea,0x00,0x00,0x00,0xf1,0x00,0x00,0x00,0xf9,0x00,0x00,0x00,0x06,0x01,0x00,0x00,0x12,0x01,0x00,0x00,0x18,0x01,0x00,0x00,0x21,0x01,0x00,0x00,0x27,0x01,0x00,0x00,0x2f,0x01,0x00,0x00,0x36,0x01,0x00,0x00,0x3c,0x01,0x00,0x00,0x43,0x01,0x00,0x00,0x4a,0x01,0x00,0x00,0x55,0x01,0x00,0x00,0x5c,0x01,0x00,0x00,0x63,0x01,0x00,0x00,0x6f,0x01,0x00,0x00,0x7b,0x01,0x00,0x00,0x8c,0x01,0x00,0x00,0x93,0x01,0x00,0x00,0x9c,0x01,0x00,0x00,0xa3,0x01,0x00,0x00,0xad,0x01,0x00,0x00,0xb2,0x01,0x00,0x00,0xbd,0x01,0x00,0x00,0xc3,0x01,0x00,0x00,0xcb,0x01,0x00,0x00,0xd4,0x01,0x00,0x00,0xda,0x01,0x00,0x00,0xe2,0x01,0x00,0x00,0xee,0x01,0x00,0x00,0xf8,0x01,0x00,0x00,0x01,0x02,0x00,0x00,0x0a,0x02,0x00,0x00,0x14,0x02,0x00,0x00,0x1a,0x02,0x00,0x00,0x23,0x02,0x00,0x00,0x31,0x02,0x00,0x00,0x3b,0x02,0x00,0x00,0x47,0x02,0x00,0x00,0x4f,0x02,0x00,0x00,0x58,0x02,0x00,0x00,0x61,0x02,0x00,0x00,0x67,0x02,0x00,0x00,0x73,0x02,0x00,0x00,0x79,0x02,0x00,0x00,0x7f,0x02,0x00,0x00,0x87,0x02,0x00,0x00,0x8e,0x02,0x00,0x00,0x95,0x02,0x00,0x00,0x9c,0x02,0x00,0x00,0xa4,0x02,0x00,0x00,0xac,0x02,0x00,0x00,0xb4,0x02,0x00,0x00,0xc2,0x02,0x00,0x00,0xca,0x02,0x00,0x00,0xd0,0x02,0x00,0x00,0xdb,0x02,0x00,0x00,0xe3,0x02,0x00,0x00,0xea,0x02,0x00,0x00,0xf1,0x02,0x00,0x00,0xf9,0x02,0x00,0x00,0xff,0x02,0x00,0x00,0x06,0x03,0x00,0x00,0x15,0x03,0x00,0x00,0x22,0x03,0x00,0x00,0x2e,0x03,0x00,0x00,0x38,0x03,0x00,0x00,0x43,0x03,0x00,0x00,0x4c,0x03,0x00,0x00,0x52,0x03,0x00,0x00,0x5a,0x03,0x00,0x00,0x63,0x03,0x00,0x00,0x6e,0x03,0x00,0x00,0x77,0x03,0x00,0x00,0x82,0x03,0x00,0x00,0x8d,0x03,0x00,0x00,0x98,0x03,0x00,0x00,0x9e,0x03,0x00,0x00,0xa4,0x03,0x00,0x00,0xac,0x03,0x00,0x00,0xb1,0x03,0x00,0x00,0xb8,0x03,0x00,0x00,0xc2,0x03,0x00,0x00,0xca,0x03,0x00,0x00,0xcf,0x03,0x00,0x00,0xd7,0x03,0x00,0x00,0xdd,0x03,0x00,0x00,0xe2,0x03,0x00,0x00,0xe8,0x03,0x00,0x00,0xed,0x03,0x00,0x00,0xf3,0x03,0x00,0x00,0x0f,0x04,0x00,0x00,0x16,0x04,0x00,0x00,0x2b,0x04,0x00,0x00,0x38,0x04,0x00,0x00,0x3d,0x04,0x00,0x00,0x42,0x04,0x00,0x00,0x50,0x04,0x00,0x00,0x5e,0x04,0x00,0x00,0x6d,0x04,0x00,0x00,0x7c,0x04,0x00,0x00,0x91,0x04,0x00,0x00,0x9d,0x04,0x00,0x00,0xa9,0x04,0x00,0x00,0xb0,0x04,0x00,0x00,0xb7,0x04,0x00,0x00,0xbd,0x04,0x00,0x00,0xd5,0x04,0x00,0x00,0xdd,0x04,0x00,0x00,0xee,0x04,0x00,0x00,0xfb,0x04,0x00,0x00,0x05,0x05,0x00,0x00,0x10,0x05,0x00,0x00,0x13,0x05,0x00,0x00,0x1c,0x05,0x00,0x00,0x29,0x05,0x00,0x00,0x2f,0x05,0x00,0x00,0x36,0x05,0x00,0x00,0x3f,0x05,0x00,0x00,0x54,0x05,0x00,0x00,0x5b,0x05,0x00,0x00,0x62,0x05,0x00,0x00,0x69,0x05,0x00,0x00,0x71,0x05,0x00,0x00,0x79,0x05,0x00,0x00};

        public static ReadOnlySpan<char> Data => new char[1409]{'C','a','l','l','I','m','m','A','d','d','r','F','P','S','t','a','c','k','f','3','2','F','P','S','t','a','c','k','f','6','4','F','a','v','o','r','M','e','m','I','n','d','i','r','e','c','t','C','a','l','l','H','a','s','3','D','N','o','w','H','a','s','3','D','N','o','w','A','H','a','s','A','D','X','H','a','s','A','E','S','H','a','s','A','M','X','B','F','1','6','H','a','s','A','M','X','I','N','T','8','H','a','s','A','M','X','T','I','L','E','H','a','s','A','V','X','H','a','s','A','V','X','1','O','n','l','y','H','a','s','A','V','X','2','H','a','s','A','V','X','5','1','2','H','a','s','A','V','X','V','N','N','I','H','a','s','B','F','1','6','H','a','s','B','I','T','A','L','G','H','a','s','B','M','I','H','a','s','B','M','I','2','H','a','s','B','W','I','H','a','s','C','D','I','H','a','s','C','L','D','E','M','O','T','E','H','a','s','C','L','F','L','U','S','H','O','P','T','H','a','s','C','L','W','B','H','a','s','C','L','Z','E','R','O','H','a','s','C','M','o','v','H','a','s','C','R','C','3','2','H','a','s','C','m','p','x','c','h','g','1','6','b','H','a','s','C','m','p','x','c','h','g','8','b','H','a','s','D','Q','I','H','a','s','E','N','Q','C','M','D','H','a','s','E','R','I','H','a','s','E','R','M','S','B','H','a','s','F','1','6','C','H','a','s','F','M','A','H','a','s','F','M','A','4','H','a','s','F','P','1','6','H','a','s','F','S','G','S','B','a','s','e','H','a','s','F','S','R','M','H','a','s','F','X','S','R','H','a','s','F','a','s','t','L','Z','C','N','T','H','a','s','F','a','s','t','M','e','m','3','2','H','a','s','F','a','s','t','S','H','L','D','R','o','t','a','t','e','H','a','s','G','F','N','I','H','a','s','H','R','E','S','E','T','H','a','s','I','F','M','A','H','a','s','I','N','V','P','C','I','D','H','a','s','K','L','H','a','s','L','A','H','F','S','A','H','F','H','a','s','L','W','P','H','a','s','L','Z','C','N','T','H','a','s','M','F','e','n','c','e','H','a','s','M','M','X','H','a','s','M','O','V','B','E','H','a','s','M','O','V','D','I','R','6','4','B','H','a','s','M','O','V','D','I','R','I','H','a','s','M','W','A','I','T','X','H','a','s','P','C','L','M','U','L','H','a','s','P','C','O','N','F','I','G','H','a','s','P','F','I','H','a','s','P','O','P','C','N','T','H','a','s','P','R','E','F','E','T','C','H','W','T','1','H','a','s','P','T','W','R','I','T','E','H','a','s','P','r','e','f','e','t','c','h','W','H','a','s','R','D','P','I','D','H','a','s','R','D','R','A','N','D','H','a','s','R','D','S','E','E','D','H','a','s','R','T','M','H','a','s','S','E','R','I','A','L','I','Z','E','H','a','s','S','G','X','H','a','s','S','H','A','H','a','s','S','H','S','T','K','H','a','s','S','S','E','1','H','a','s','S','S','E','2','H','a','s','S','S','E','3','H','a','s','S','S','E','4','1','H','a','s','S','S','E','4','2','H','a','s','S','S','E','4','A','H','a','s','S','S','E','P','r','e','f','e','t','c','h','H','a','s','S','S','S','E','3','H','a','s','T','B','M','H','a','s','T','S','X','L','D','T','R','K','H','a','s','U','I','N','T','R','H','a','s','V','A','E','S','H','a','s','V','B','M','I','H','a','s','V','B','M','I','2','H','a','s','V','L','X','H','a','s','V','N','N','I','H','a','s','V','P','2','I','N','T','E','R','S','E','C','T','H','a','s','V','P','C','L','M','U','L','Q','D','Q','H','a','s','V','P','O','P','C','N','T','D','Q','H','a','s','W','A','I','T','P','K','G','H','a','s','W','B','N','O','I','N','V','D','H','a','s','W','I','D','E','K','L','H','a','s','X','O','P','H','a','s','X','S','A','V','E','H','a','s','X','S','A','V','E','C','H','a','s','X','S','A','V','E','O','P','T','H','a','s','X','S','A','V','E','S','I','n','1','6','B','i','t','M','o','d','e','I','n','3','2','B','i','t','M','o','d','e','I','n','6','4','B','i','t','M','o','d','e','I','s','L','P','6','4','I','s','N','a','C','l','I','s','N','o','t','P','I','C','I','s','P','S','4','I','s','W','i','n','6','4','K','e','r','n','e','l','C','o','d','e','N','e','a','r','D','a','t','a','N','o','A','V','X','N','o','A','V','X','5','1','2','N','o','B','M','I','2','N','o','B','W','I','N','o','C','M','o','v','N','o','D','Q','I','N','o','F','M','A','4','N','o','H','o','n','o','r','S','i','g','n','D','e','p','e','n','d','e','n','t','R','o','u','n','d','i','n','g','N','o','S','S','E','4','1','N','o','S','S','E','4','1','_','O','r','_','O','p','t','F','o','r','S','i','z','e','N','o','S','S','E','P','r','e','f','e','t','c','h','N','o','T','B','M','N','o','V','L','X','N','o','V','L','X','_','O','r','_','N','o','B','W','I','N','o','V','L','X','_','O','r','_','N','o','D','Q','I','N','o','V','L','X','_','O','r','_','N','o','V','A','E','S','N','o','V','L','X','_','O','r','_','N','o','V','N','N','I','N','o','V','L','X','_','O','r','_','N','o','V','P','C','L','M','U','L','Q','D','Q','N','o','t','1','6','B','i','t','M','o','d','e','N','o','t','6','4','B','i','t','M','o','d','e','N','o','t','L','P','6','4','N','o','t','N','a','C','l','N','o','t','P','S','4','N','o','t','U','s','e','I','n','d','i','r','e','c','t','T','h','u','n','k','C','a','l','l','s','N','o','t','W','i','n','6','4','N','o','t','W','i','n','6','4','W','i','t','h','o','u','t','F','P','O','p','t','F','o','r','M','i','n','S','i','z','e','O','p','t','F','o','r','S','i','z','e','O','p','t','F','o','r','S','p','e','e','d','P','K','U','S','m','a','l','l','C','o','d','e','T','r','u','e','P','r','e','d','i','c','a','t','e','U','s','e','A','V','X','U','s','e','A','V','X','2','U','s','e','I','n','c','D','e','c','U','s','e','I','n','d','i','r','e','c','t','T','h','u','n','k','C','a','l','l','s','U','s','e','S','S','E','1','U','s','e','S','S','E','2','U','s','e','S','S','E','3','U','s','e','S','S','E','4','1','U','s','e','S','S','E','4','2','U','s','e','S','S','S','E','3',};
    }
}
