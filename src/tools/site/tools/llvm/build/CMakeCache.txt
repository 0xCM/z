# This is the CMakeCache file.
# For build in directory: w:/llvm/v15.0.1/src/llvm/out/build/x64-Release
# It was generated by CMake: D:/tools/msvs/msvs.2022/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cmake.exe
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Build a 32 bit version of the library - unsupported when using
// MSVC)
BENCHMARK_BUILD_32_BITS:BOOL=OFF

//Allow the downloading and in-tree building of unmet dependencies
BENCHMARK_DOWNLOAD_DEPENDENCIES:BOOL=OFF

//Enable building and running the assembly tests
BENCHMARK_ENABLE_ASSEMBLY_TESTS:BOOL=True

//Build documentation with Doxygen.
BENCHMARK_ENABLE_DOXYGEN:BOOL=OFF

//Enable the use of exceptions in the benchmark library.
BENCHMARK_ENABLE_EXCEPTIONS:BOOL=OFF

//Enable building the unit tests which depend on gtest
BENCHMARK_ENABLE_GTEST_TESTS:BOOL=OFF

//Enable installation of benchmark. (Projects embedding benchmark
// may want to turn this OFF.)
BENCHMARK_ENABLE_INSTALL:BOOL=OFF

//Enable performance counters provided by libpfm
BENCHMARK_ENABLE_LIBPFM:BOOL=OFF

//Enable link time optimisation of the benchmark library.
BENCHMARK_ENABLE_LTO:BOOL=OFF

//Enable testing of the benchmark library.
BENCHMARK_ENABLE_TESTING:BOOL=OFF

//Build Release candidates with -Werror.
BENCHMARK_ENABLE_WERROR:BOOL=OFF

//Build Release candidates with -Werror regardless of compiler
// issues.
BENCHMARK_FORCE_WERROR:BOOL=OFF

//Enable installation of documentation.
BENCHMARK_INSTALL_DOCS:BOOL=ON

//Use bundled GoogleTest. If disabled, the find_package(GTest)
// will be used.
BENCHMARK_USE_BUNDLED_GTEST:BOOL=ON

//Build and test using libc++ as the standard library.
BENCHMARK_USE_LIBCXX:BOOL=OFF

//Path to clang executable for the target architecture for use
// in BOLT tests
BOLT_CLANG_EXE:FILEPATH=

//Generate build targets for the BOLT docs.
BOLT_INCLUDE_DOCS:BOOL=ON

//Path to lld executable for the target architecture for use in
// BOLT tests
BOLT_LLD_EXE:FILEPATH=

//Path for binary subdirectory (defaults to 'bin')
BOLT_TOOLS_INSTALL_DIR:PATH=bin

//Default URL where bug reports are to be submitted.
BUG_REPORT_URL:STRING=https://github.com/llvm/llvm-project/issues/

//Build clang-format VS plugin
BUILD_CLANG_FORMAT_VS_PLUGIN:BOOL=OFF

//Build all libraries as shared libraries instead of static
BUILD_SHARED_LIBS:BOOL=OFF

//Header providing backtrace(3) facility
Backtrace_HEADER:STRING=backtrace.h

//Path to a file.
Backtrace_INCLUDE_DIR:PATH=Backtrace_INCLUDE_DIR-NOTFOUND

//Path to a library.
Backtrace_LIBRARY:FILEPATH=Backtrace_LIBRARY-NOTFOUND

//Build XPC Support For Clangd.
CLANGD_BUILD_XPC:BOOL=0

//Call malloc_trim(3) periodically in Clangd. (only takes effect
// when using glibc)
CLANGD_MALLOC_TRIM:BOOL=ON

//Link all clang-tidy checks into clangd
CLANGD_TIDY_CHECKS:BOOL=ON

//Build CLANG example programs by default.
CLANG_BUILD_EXAMPLES:BOOL=True

//Build the Clang tools. If OFF, just generate build targets.
CLANG_BUILD_TOOLS:BOOL=ON

//Default C++ stdlib to use ("libstdc++" or "libc++", empty for
// platform default
CLANG_DEFAULT_CXX_STDLIB:STRING=

//Default linker to use (linker name or absolute path, empty for
// platform default)
CLANG_DEFAULT_LINKER:STRING=

//Default objcopy executable to use.
CLANG_DEFAULT_OBJCOPY:STRING=objcopy

//Default OpenMP runtime used by -fopenmp.
CLANG_DEFAULT_OPENMP_RUNTIME:STRING=libomp

//Default to -fPIE and -pie on linux-gnu
CLANG_DEFAULT_PIE_ON_LINUX:BOOL=ON

//Default runtime library to use ("libgcc" or "compiler-rt", empty
// for platform default)
CLANG_DEFAULT_RTLIB:STRING=

//Default standard to use for C/ObjC code (IDENT from LangStandards.def,
// empty for platform default)
CLANG_DEFAULT_STD_C:STRING=

//Default standard to use for C++/ObjC++ code (IDENT from LangStandards.def,
// empty for platform default)
CLANG_DEFAULT_STD_CXX:STRING=

//Default unwind library to use ("none" "libgcc" or "libunwind",
// empty to match runtime library.)
CLANG_DEFAULT_UNWINDLIB:STRING=

//Build ARCMT.
CLANG_ENABLE_ARCMT:BOOL=ON

//Build clangd language server
CLANG_ENABLE_CLANGD:BOOL=ON

//Enable opaque pointers by default
CLANG_ENABLE_OPAQUE_POINTERS:STRING=DEFAULT

//Build Clang protobuf fuzzer.
CLANG_ENABLE_PROTO_FUZZER:BOOL=OFF

//Include static analyzer in clang binary.
CLANG_ENABLE_STATIC_ANALYZER:BOOL=ON

//Major version number that will be appended to the clang executable
// name
CLANG_EXECUTABLE_VERSION:STRING=15

//Force the SOVERSION of libclang to be equal to CLANG_MAJOR
CLANG_FORCE_MATCHING_LIBCLANG_SOVERSION:BOOL=ON

//Generate build targets for the Clang docs.
CLANG_INCLUDE_DOCS:BOOL=ON

//Generate build targets for the Clang unit tests.
CLANG_INCLUDE_TESTS:BOOL=ON

//Path for CMake subdirectory for Clang (defaults to 'lib/cmake/clang')
CLANG_INSTALL_PACKAGE_DIR:STRING=lib/cmake/clang

//Install the scan-build tool
CLANG_INSTALL_SCANBUILD:BOOL=ON

//Install the scan-view tool
CLANG_INSTALL_SCANVIEW:BOOL=ON

//Link tools against libclang-cpp.so
CLANG_LINK_CLANG_DYLIB:BOOL=OFF

//Default architecture for OpenMP offloading to Nvidia GPUs.
CLANG_OPENMP_NVPTX_DEFAULT_ARCH:STRING=sm_35

//The path to a lit testsuite containing samples for PGO and order
// file generation
CLANG_PGO_TRAINING_DATA:PATH=W:/llvm/v15.0.1/src/clang/utils/perf-training

//Host clang-pseudo-gen executable. Saves building if cross-compiling.
CLANG_PSEUDO_GEN:STRING=clang-pseudo-gen

//Python versions to install libclang python bindings for
CLANG_PYTHON_BINDINGS_VERSIONS:STRING=

//Vendor-specific text for showing the repository the source is
// taken from.
CLANG_REPOSITORY_STRING:STRING=

//Relative directory from the Clang binary to its resource files.
CLANG_RESOURCE_DIR:STRING=

//Whether clang should use a new process for the CC1 invocation
CLANG_SPAWN_CC1:BOOL=OFF

//SystemZ Default Arch
CLANG_SYSTEMZ_DEFAULT_ARCH:STRING=z10

//Native TableGen executable. Saves building one when cross-compiling.
CLANG_TABLEGEN:STRING=clang-tblgen

//Run Clang tests under Valgrind
CLANG_TEST_USE_VG:BOOL=OFF

//Host clang-tidy-confusable-chars-gen executable. Saves building
// if cross-compiling.
CLANG_TIDY_CONFUSABLE_CHARS_GEN:STRING=clang-tidy-confusable-chars-gen

//Include static analyzer checks in clang-tidy
CLANG_TIDY_ENABLE_STATIC_ANALYZER:BOOL=ON

//Enable AST introspection
CLANG_TOOLING_BUILD_AST_INTROSPECTION:BOOL=ON

//Generate build targets for the Clang Extra Tools docs.
CLANG_TOOLS_EXTRA_INCLUDE_DOCS:BOOL=ON

//Path for binary subdirectory (defaults to 'bin')
CLANG_TOOLS_INSTALL_DIR:PATH=bin

//Run Clang tools' tests under Valgrind
CLANG_TOOLS_TEST_USE_VG:BOOL=OFF

//Whether to build amdgpu-arch as part of CLANG
CLANG_TOOL_AMDGPU_ARCH_BUILD:BOOL=ON

//Whether to build apinotes-test as part of CLANG
CLANG_TOOL_APINOTES_TEST_BUILD:BOOL=ON

//Whether to build arcmt-test as part of CLANG
CLANG_TOOL_ARCMT_TEST_BUILD:BOOL=ON

//Whether to build clang-check as part of CLANG
CLANG_TOOL_CLANG_CHECK_BUILD:BOOL=ON

//Whether to build clang-diff as part of CLANG
CLANG_TOOL_CLANG_DIFF_BUILD:BOOL=ON

//Whether to build clang-extdef-mapping as part of CLANG
CLANG_TOOL_CLANG_EXTDEF_MAPPING_BUILD:BOOL=ON

//Whether to build clang-format as part of CLANG
CLANG_TOOL_CLANG_FORMAT_BUILD:BOOL=ON

//Whether to build clang-format-vs as part of CLANG
CLANG_TOOL_CLANG_FORMAT_VS_BUILD:BOOL=ON

//Whether to build clang-fuzzer as part of CLANG
CLANG_TOOL_CLANG_FUZZER_BUILD:BOOL=ON

//Whether to build clang-import-test as part of CLANG
CLANG_TOOL_CLANG_IMPORT_TEST_BUILD:BOOL=ON

//Whether to build clang-linker-wrapper as part of CLANG
CLANG_TOOL_CLANG_LINKER_WRAPPER_BUILD:BOOL=ON

//Whether to build clang-nvlink-wrapper as part of CLANG
CLANG_TOOL_CLANG_NVLINK_WRAPPER_BUILD:BOOL=ON

//Whether to build clang-offload-bundler as part of CLANG
CLANG_TOOL_CLANG_OFFLOAD_BUNDLER_BUILD:BOOL=ON

//Whether to build clang-offload-packager as part of CLANG
CLANG_TOOL_CLANG_OFFLOAD_PACKAGER_BUILD:BOOL=ON

//Whether to build clang-offload-wrapper as part of CLANG
CLANG_TOOL_CLANG_OFFLOAD_WRAPPER_BUILD:BOOL=ON

//Whether to build clang-refactor as part of CLANG
CLANG_TOOL_CLANG_REFACTOR_BUILD:BOOL=ON

//Whether to build clang-rename as part of CLANG
CLANG_TOOL_CLANG_RENAME_BUILD:BOOL=ON

//Whether to build clang-repl as part of CLANG
CLANG_TOOL_CLANG_REPL_BUILD:BOOL=ON

//Whether to build clang-scan-deps as part of CLANG
CLANG_TOOL_CLANG_SCAN_DEPS_BUILD:BOOL=ON

//Whether to build CLANG_SHLIB as part of CLANG
CLANG_TOOL_CLANG_SHLIB_BUILD:BOOL=ON

//Whether to build c-arcmt-test as part of CLANG
CLANG_TOOL_C_ARCMT_TEST_BUILD:BOOL=ON

//Whether to build c-index-test as part of CLANG
CLANG_TOOL_C_INDEX_TEST_BUILD:BOOL=ON

//Whether to build diagtool as part of CLANG
CLANG_TOOL_DIAGTOOL_BUILD:BOOL=ON

//Whether to build dictionary as part of CLANG
CLANG_TOOL_DICTIONARY_BUILD:BOOL=ON

//Whether to build driver as part of CLANG
CLANG_TOOL_DRIVER_BUILD:BOOL=ON

//Whether to build handle-cxx as part of CLANG
CLANG_TOOL_HANDLE_CXX_BUILD:BOOL=ON

//Whether to build handle-llvm as part of CLANG
CLANG_TOOL_HANDLE_LLVM_BUILD:BOOL=ON

//Whether to build libclang as part of CLANG
CLANG_TOOL_LIBCLANG_BUILD:BOOL=ON

//Whether to build scan-build as part of CLANG
CLANG_TOOL_SCAN_BUILD_BUILD:BOOL=ON

//Whether to build scan-build-py as part of CLANG
CLANG_TOOL_SCAN_BUILD_PY_BUILD:BOOL=ON

//Whether to build scan-view as part of CLANG
CLANG_TOOL_SCAN_VIEW_BUILD:BOOL=ON

//Vendor-specific text for showing with version information.
CLANG_VENDOR:STRING=

//Vendor-specific uti.
CLANG_VENDOR_UTI:STRING=org.llvm.clang

//Path to a program.
CMAKE_AR:FILEPATH=D:/tools/msvs/msvs.2022/VC/Tools/MSVC/14.34.31823/bin/Hostx64/x64/lib.exe

//ASM compiler
CMAKE_ASM_COMPILER:FILEPATH=D:/tools/msvs/msvs.2022/VC/Tools/MSVC/14.34.31823/bin/Hostx64/x64/cl.exe

//Flags used by the ASM compiler during all build types.
CMAKE_ASM_FLAGS:STRING=

//Flags used by the ASM compiler during DEBUG builds.
CMAKE_ASM_FLAGS_DEBUG:STRING=

//Flags used by the ASM compiler during MINSIZEREL builds.
CMAKE_ASM_FLAGS_MINSIZEREL:STRING=

//Flags used by the ASM compiler during RELEASE builds.
CMAKE_ASM_FLAGS_RELEASE:STRING=

//Flags used by the ASM compiler during RELWITHDEBINFO builds.
CMAKE_ASM_FLAGS_RELWITHDEBINFO:STRING=

//ASM_MASM compiler
CMAKE_ASM_MASM_COMPILER:FILEPATH=D:/tools/msvs/msvs.2022/VC/Tools/MSVC/14.34.31823/bin/Hostx64/x64/ml64.exe

//Flags used by the ASM_MASM compiler during all build types.
CMAKE_ASM_MASM_FLAGS:STRING=

//Flags used by the ASM_MASM compiler during DEBUG builds.
CMAKE_ASM_MASM_FLAGS_DEBUG:STRING=

//Flags used by the ASM_MASM compiler during MINSIZEREL builds.
CMAKE_ASM_MASM_FLAGS_MINSIZEREL:STRING=

//Flags used by the ASM_MASM compiler during RELEASE builds.
CMAKE_ASM_MASM_FLAGS_RELEASE:STRING=

//Flags used by the ASM_MASM compiler during RELWITHDEBINFO builds.
CMAKE_ASM_MASM_FLAGS_RELWITHDEBINFO:STRING=

//No help, variable specified on the command line.
CMAKE_BUILD_TYPE:STRING=Release

//CUDA compiler
CMAKE_CUDA_COMPILER:STRING=D:/env/sdks/cuda/root/bin/nvcc.exe

//Flags used by the CUDA compiler during all build types.
CMAKE_CUDA_FLAGS:STRING=-D_WINDOWS -Xcompiler="/W3 /GR /EHsc"

//Flags used by the CUDA compiler during DEBUG builds.
CMAKE_CUDA_FLAGS_DEBUG:STRING=-Xcompiler="-MDd -Zi -Ob0 -Od /RTC1"

//Flags used by the CUDA compiler during MINSIZEREL builds.
CMAKE_CUDA_FLAGS_MINSIZEREL:STRING=-Xcompiler="-MD -O1 -Ob1" -DNDEBUG

//Flags used by the CUDA compiler during RELEASE builds.
CMAKE_CUDA_FLAGS_RELEASE:STRING=-Xcompiler="-MD -O2 -Ob2" -DNDEBUG

//Flags used by the CUDA compiler during RELWITHDEBINFO builds.
CMAKE_CUDA_FLAGS_RELWITHDEBINFO:STRING=-Xcompiler="-MD -Zi -O2 -Ob1" -DNDEBUG

//Libraries linked by default with all CUDA applications.
CMAKE_CUDA_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//No help, variable specified on the command line.
CMAKE_CXX_COMPILER:FILEPATH=D:/tools/msvs/msvs.2022/VC/Tools/MSVC/14.34.31823/bin/Hostx64/x64/cl.exe

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3 /GR /EHsc

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//C++ standard to conform to
CMAKE_CXX_STANDARD:STRING=14

//Libraries linked by default with all C++ applications.
CMAKE_CXX_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//No help, variable specified on the command line.
CMAKE_C_COMPILER:FILEPATH=D:/tools/msvs/msvs.2022/VC/Tools/MSVC/14.34.31823/bin/Hostx64/x64/cl.exe

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=/DWIN32 /D_WINDOWS /W3

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=/MDd /Zi /Ob0 /Od /RTC1

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=/MD /O1 /Ob1 /DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=/MD /O2 /Ob2 /DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=/MD /Zi /O2 /Ob1 /DNDEBUG

//Libraries linked by default with all C applications.
CMAKE_C_STANDARD_LIBRARIES:STRING=kernel32.lib user32.lib gdi32.lib winspool.lib shell32.lib ole32.lib oleaut32.lib uuid.lib comdlg32.lib advapi32.lib

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=W:/llvm/v15.0.1/src/llvm/out/build/x64-Release/CMakeFiles/pkgRedirects

//User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

//Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

//Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

//Directories containing installed CMake modules (lib/cmake)
CMAKE_INSTALL_PACKAGEDIR:PATH=lib/cmake

//No help, variable specified on the command line.
CMAKE_INSTALL_PREFIX:PATH=W:/llvm/v15.0.1/src/llvm/out/install/x64-Release

//Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

//System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//Path to a program.
CMAKE_LINKER:FILEPATH=D:/tools/msvs/msvs.2022/VC/Tools/MSVC/14.34.31823/bin/Hostx64/x64/link.exe

//No help, variable specified on the command line.
CMAKE_MAKE_PROGRAM:UNINITIALIZED=D:\TOOLS\MSVS\MSVS.2022\COMMON7\IDE\COMMONEXTENSIONS\MICROSOFT\CMAKE\Ninja\ninja.exe

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//Path to a program.
CMAKE_MT:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.22621.0/x64/mt.exe

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=LLVM

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=15.0.1

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=15

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=1

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//RC compiler
CMAKE_RC_COMPILER:FILEPATH=C:/Program Files (x86)/Windows Kits/10/bin/10.0.22621.0/x64/rc.exe

//Flags for Windows Resource Compiler during all build types.
CMAKE_RC_FLAGS:STRING=-DWIN32

//Flags for Windows Resource Compiler during DEBUG builds.
CMAKE_RC_FLAGS_DEBUG:STRING=-D_DEBUG

//Flags for Windows Resource Compiler during MINSIZEREL builds.
CMAKE_RC_FLAGS_MINSIZEREL:STRING=

//Flags for Windows Resource Compiler during RELEASE builds.
CMAKE_RC_FLAGS_RELEASE:STRING=

//Flags for Windows Resource Compiler during RELWITHDEBINFO builds.
CMAKE_RC_FLAGS_RELWITHDEBINFO:STRING=

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=/debug /INCREMENTAL

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=/INCREMENTAL:NO

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=/debug /INCREMENTAL

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=/machine:x64

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//No help, variable specified on the command line.
CMAKE_TOOLCHAIN_FILE:FILEPATH=D:/env/sdks/vcpkg/scripts/buildsystems/vcpkg.cmake

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Enable to build 7-Zip packages
CPACK_BINARY_7Z:BOOL=OFF

//Enable to build IFW packages
CPACK_BINARY_IFW:BOOL=OFF

//Enable to build NSIS packages
CPACK_BINARY_NSIS:BOOL=ON

//Enable to build NuGet packages
CPACK_BINARY_NUGET:BOOL=OFF

//Enable to build WiX packages
CPACK_BINARY_WIX:BOOL=OFF

//Enable to build ZIP packages
CPACK_BINARY_ZIP:BOOL=OFF

//Enable to build 7-Zip source packages
CPACK_SOURCE_7Z:BOOL=ON

//Enable to build ZIP source packages
CPACK_SOURCE_ZIP:BOOL=ON

//Compile device code in 64 bit mode
CUDA_64_BIT_DEVICE_CODE:BOOL=ON

//Attach the build rule to the CUDA source file.  Enable only when
// the CUDA source file is added to at most one target.
CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE:BOOL=ON

//Generate and parse .cubin files in Device mode.
CUDA_BUILD_CUBIN:BOOL=OFF

//No help, variable specified on the command line.
CUDA_BUILD_EMULATION:BOOL=True

//"cudart" library
CUDA_CUDART_LIBRARY:FILEPATH=CUDA_CUDART_LIBRARY-NOTFOUND

//"cuda" library (older versions only).
CUDA_CUDA_LIBRARY:FILEPATH=CUDA_CUDA_LIBRARY-NOTFOUND

//Path to a library.
CUDA_DRIVER_LIBRARY:FILEPATH=D:/env/sdks/cuda/root/lib/x64/cuda.lib

//Directory to put all the output files.  If blank it will default
// to the CMAKE_CURRENT_BINARY_DIR
CUDA_GENERATED_OUTPUT_DIR:PATH=

//Generated file extension
CUDA_HOST_COMPILATION_CPP:BOOL=ON

//Host side compiler used by NVCC
CUDA_HOST_COMPILER:FILEPATH=D:/tools/msvs/msvs.2022/VC/Tools/MSVC/14.34.31823/bin/Hostx64/x64/cl.exe

//Path to a program.
CUDA_NVCC_EXECUTABLE:FILEPATH=CUDA_NVCC_EXECUTABLE-NOTFOUND

//Semi-colon delimit multiple arguments. during all build types.
CUDA_NVCC_FLAGS:STRING=

//Semi-colon delimit multiple arguments. during DEBUG builds.
CUDA_NVCC_FLAGS_DEBUG:STRING=

//Semi-colon delimit multiple arguments. during MINSIZEREL builds.
CUDA_NVCC_FLAGS_MINSIZEREL:STRING=

//Semi-colon delimit multiple arguments. during RELEASE builds.
CUDA_NVCC_FLAGS_RELEASE:STRING=

//Semi-colon delimit multiple arguments. during RELWITHDEBINFO
// builds.
CUDA_NVCC_FLAGS_RELWITHDEBINFO:STRING=

//Propagate C/CXX_FLAGS and friends to the host compiler via -Xcompile
CUDA_PROPAGATE_HOST_FLAGS:BOOL=ON

//Path to a library.
CUDA_RUNTIME_LIBRARY:FILEPATH=D:/env/sdks/cuda/root/lib/x64/cuda.lib

//No help, variable specified on the command line.
CUDA_SDK_ROOT_DIR:PATH=D:/env/sdks/cuda/root

//Compile CUDA objects with separable compilation enabled.  Requires
// CUDA 5.0+
CUDA_SEPARABLE_COMPILATION:BOOL=OFF

//Path to a file.
CUDA_TOOLKIT_INCLUDE:PATH=CUDA_TOOLKIT_INCLUDE-NOTFOUND

//Print out the commands run while compiling the CUDA source file.
//  With the Makefile generator this defaults to VERBOSE variable
// specified on the command line, but can be forced on with this
// option.
CUDA_VERBOSE_BUILD:BOOL=OFF

//"cublas" library
CUDA_cublas_LIBRARY:FILEPATH=CUDA_cublas_LIBRARY-NOTFOUND

//"cublasemu" library
CUDA_cublasemu_LIBRARY:FILEPATH=CUDA_cublasemu_LIBRARY-NOTFOUND

//"cufft" library
CUDA_cufft_LIBRARY:FILEPATH=CUDA_cufft_LIBRARY-NOTFOUND

//"cufftemu" library
CUDA_cufftemu_LIBRARY:FILEPATH=CUDA_cufftemu_LIBRARY-NOTFOUND

//The directory containing a CMake configuration file for CURL.
CURL_DIR:PATH=D:/env/sdks/vcpkg/installed/x64-windows/share/curl

//Path to a library.
CURSES_CURSES_LIBRARY:FILEPATH=CURSES_CURSES_LIBRARY-NOTFOUND

//Path to a library.
CURSES_FORM_LIBRARY:FILEPATH=CURSES_FORM_LIBRARY-NOTFOUND

//Path to a file.
CURSES_INCLUDE_PATH:PATH=CURSES_INCLUDE_PATH-NOTFOUND

//Path to a library.
CURSES_NCURSES_LIBRARY:FILEPATH=CURSES_NCURSES_LIBRARY-NOTFOUND

//Path to a program.
CYGWIN_BAT:FILEPATH=CYGWIN_BAT-NOTFOUND

//Colon separated list of directories clang will search for headers.
C_INCLUDE_DIRS:STRING=

//Fallback path to search for ROCm installs
DEFAULT_ROCM_PATH:PATH=/opt/rocm

//Default <path> to all compiler invocations for --sysroot=<path>.
DEFAULT_SYSROOT:STRING=

//Dot tool for use with Doxygen
DOXYGEN_DOT_EXECUTABLE:FILEPATH=DOXYGEN_DOT_EXECUTABLE-NOTFOUND

//Doxygen documentation generation tool (http://www.doxygen.org)
DOXYGEN_EXECUTABLE:FILEPATH=B:/tools/doxygen/bin/doxygen.exe

//Path to a program.
DTRACE:FILEPATH=DTRACE-NOTFOUND

//pass --build-id to ld
ENABLE_LINKER_BUILD_ID:BOOL=OFF

//enable x86 relax relocations by default
ENABLE_X86_RELAX_RELOCATIONS:BOOL=ON

//The directory containing a CMake configuration file for FBSDVMCore.
FBSDVMCore_DIR:PATH=FBSDVMCore_DIR-NOTFOUND

//Additional directory, where CMake should search for ffi.h or
// ffi/ffi.h
FFI_INCLUDE_DIR:PATH=

//Additional directory, where CMake should search for libffi.so
FFI_LIBRARY_DIR:PATH=

//Build Flang example programs by default.
FLANG_BUILD_EXAMPLES:BOOL=OFF

//Build the Flang tools. If OFF, just generate build targets.
FLANG_BUILD_TOOLS:BOOL=ON

//Default linker to use (linker name or absolute path, empty for
// platform default)
FLANG_DEFAULT_LINKER:STRING=

//Default Fortran runtime library to use ("libFortranRuntime"),
// leave empty for platform default.
FLANG_DEFAULT_RTLIB:STRING=

//Fail and stop building flang if a warning is triggered.
FLANG_ENABLE_WERROR:BOOL=OFF

//Major version number to appended to the flang executable name.
FLANG_EXECUTABLE_VERSION:STRING=15

//Generate build targets for the Flang docs.
FLANG_INCLUDE_DOCS:BOOL=ON

//Generate build targets for the Flang unit tests.
FLANG_INCLUDE_TESTS:BOOL=ON

//Path for CMake subdirectory for Flang (defaults to 'lib/cmake/flang')
FLANG_INSTALL_PACKAGE_DIR:STRING=lib/cmake/flang

//Build Flang with plugin support.
FLANG_PLUGIN_SUPPORT:BOOL=ON

//Vendor-specific text for showing the repository the source is
// taken from.
FLANG_REPOSITORY_STRING:STRING=

//Path for binary subdirectory (defaults to 'bin')
FLANG_TOOLS_INSTALL_DIR:PATH=bin

//Vendor-specific Flang version information.
FLANG_VENDOR:STRING=

//Vendor-specific uti.
FLANG_VENDOR_UTI:STRING=org.llvm.flang

//Directory where gcc is installed.
GCC_INSTALL_PREFIX:PATH=

//Git command line client
GIT_EXECUTABLE:FILEPATH=B:/tools/gfw/bin/git.exe

//GNU ld
GNU_LD_EXECUTABLE:FILEPATH=GNU_LD_EXECUTABLE-NOTFOUND

//The gold linker
GOLD_EXECUTABLE:FILEPATH=GOLD_EXECUTABLE-NOTFOUND

//go executable
GO_EXECUTABLE:FILEPATH=B:/lang/go/install/bin/go.exe

//Path to gRPC library manual installation.
GRPC_INSTALL_PATH:PATH=

//OK
HAVE_STD_REGEX:BOOL=ON

//Build libclang as a static library (in addition to a shared one)
LIBCLANG_BUILD_STATIC:BOOL=OFF

//Major version number that will be appended to the libclang library
LIBCLANG_LIBRARY_VERSION:STRING=15

//Major version number to appended to the libflang library.
LIBFLANG_LIBRARY_VERSION:STRING=15

//Path to a file.
LIBLZMA_INCLUDE_DIR:PATH=D:/env/sdks/vcpkg/installed/x64-windows/include

//Path to a library.
LIBLZMA_LIBRARY_DEBUG:FILEPATH=D:/env/sdks/vcpkg/installed/x64-windows/debug/lib/lzma.lib

//Path to a library.
LIBLZMA_LIBRARY_RELEASE:FILEPATH=D:/env/sdks/vcpkg/installed/x64-windows/lib/lzma.lib

//Appended user specified assembler flags.
LIBOMP_ASMFLAGS:STRING=

//Should exports be copied into source exports/ directory?
LIBOMP_COPY_EXPORTS:STRING=FALSE

//Appended user specified C preprocessor flags.
LIBOMP_CPPFLAGS:STRING=

//Appended user specified C++ compiler flags.
LIBOMP_CXXFLAGS:STRING=

//Shared library instead of static library?
LIBOMP_ENABLE_SHARED:BOOL=TRUE

//Appended user specified Fortran compiler flags.  These are only
// used if LIBOMP_FORTRAN_MODULES==TRUE.
LIBOMP_FFLAGS:STRING=

//Create Fortran module files? (requires fortran compiler)
LIBOMP_FORTRAN_MODULES:BOOL=FALSE

//Install path for hwloc library
LIBOMP_HWLOC_INSTALL_DIR:PATH=/usr/local

//Install libgomp and libiomp5 library aliases for backwards compatibility
LIBOMP_INSTALL_ALIASES:BOOL=TRUE

//Appended user specified linker flags.
LIBOMP_LDFLAGS:STRING=

//Appended user specified linked libs flags. (e.g., -lm)
LIBOMP_LIBFLAGS:STRING=

//Base OMP library name
LIBOMP_LIB_NAME:STRING=libomp

//Performance,Profiling,Stubs library (normal/profile/stubs)
LIBOMP_LIB_TYPE:STRING=normal

//Intel(R) Many Integrated Core Architecture (Intel(R) MIC Architecture)
// (knf/knc).  Ignored if not Intel(R) MIC Architecture build.
LIBOMP_MIC_ARCH:STRING=knc

//OMPD-support?
LIBOMP_OMPD_SUPPORT:BOOL=FALSE

//No help, variable specified on the command line.
LIBOMP_OMPT_DEBUG:BOOL=False

//OMPT-optional?
LIBOMP_OMPT_OPTIONAL:BOOL=TRUE

//No help, variable specified on the command line.
LIBOMP_OMPT_SUPPORT:BOOL=True

//For Mac builds, semicolon separated list of architectures to
// build for universal fat binary.
LIBOMP_OSX_ARCHITECTURES:STRING=

//Path to a program.
LIBOMP_SHELL:FILEPATH=B:/tools/gfw/bin/sh.exe

//Stats-Gathering functionality?
LIBOMP_STATS:BOOL=FALSE

//Should Intel(R) TSX lock be compiled (adaptive lock in kmp_lock.cpp).
//  These are x86 specific.
LIBOMP_USE_ADAPTIVE_LOCKS:BOOL=FALSE

//Enable debugger interface code?
LIBOMP_USE_DEBUGGER:BOOL=FALSE

//Hierarchical scheduling support?
LIBOMP_USE_HIER_SCHED:BOOL=FALSE

//Use Hwloc (http://www.open-mpi.org/projects/hwloc/) library for
// affinity?
LIBOMP_USE_HWLOC:BOOL=FALSE

//Should larger alignment (4096 bytes) be used for some locks and
// data structures?
LIBOMP_USE_INTERNODE_ALIGNMENT:BOOL=FALSE

//Enable ITT notify?
LIBOMP_USE_ITT_NOTIFY:BOOL=TRUE

//Should 128-bit precision entry points be built?
LIBOMP_USE_QUAD_PRECISION:BOOL=FALSE

//Should we link to C++ library?
LIBOMP_USE_STDCPPLIB:BOOL=FALSE

//Should version symbols be used? These provide binary compatibility
// with libgomp.
LIBOMP_USE_VERSION_SYMBOLS:BOOL=

//Path to a file.
LIBXML2_INCLUDE_DIR:PATH=D:/env/sdks/vcpkg/installed/x64-windows/include/libxml2

//Path to a library.
LIBXML2_LIBRARY:FILEPATH=D:/env/sdks/vcpkg/installed/x64-windows/lib/libxml2.lib

//Path to a program.
LIBXML2_XMLLINT_EXECUTABLE:FILEPATH=LIBXML2_XMLLINT_EXECUTABLE-NOTFOUND

//Build LLDB.framework (Darwin only)
LLDB_BUILD_FRAMEWORK:BOOL=OFF

//Enable Building of Intel(R) Memory Protection Extensions
LLDB_BUILD_INTEL_MPX:BOOL=ON

//Enable Building of Intel(R) Processor Trace Tool
LLDB_BUILD_INTEL_PT:BOOL=OFF

//Enable curses support in LLDB On, Off or Auto (default)
LLDB_ENABLE_CURSES:STRING=Auto

//Enable libfbsdvmcore support in LLDB On, Off or Auto (default)
LLDB_ENABLE_FBSDVMCORE:STRING=Auto

//Enable editline support in LLDB On, Off or Auto (default)
LLDB_ENABLE_LIBEDIT:STRING=Auto

//Enable Libxml 2 support in LLDB On, Off or Auto (default)
LLDB_ENABLE_LIBXML2:STRING=Auto

//Enable Lua scripting support in LLDB On, Off or Auto (default)
LLDB_ENABLE_LUA:STRING=Auto

//Enable LZMA compression support in LLDB On, Off or Auto (default)
LLDB_ENABLE_LZMA:STRING=Auto

//Enable Python scripting support in LLDB On, Off or Auto (default)
LLDB_ENABLE_PYTHON:STRING=Auto

//Path to the global lldbinit directory. Relative paths are resolved
// relative to the
//\n  directory containing the LLDB library.
LLDB_GLOBAL_INIT_DIRECTORY:STRING=

//Generate build targets for the LLDB unit tests.
LLDB_INCLUDE_TESTS:BOOL=ON

//Disable default RPATH settings in binaries
LLDB_NO_INSTALL_DEFAULT_RPATH:BOOL=OFF

//Whether to skip generating a dSYM when installing lldb.
LLDB_SKIP_DSYM:BOOL=OFF

//Whether to skip stripping of binaries when installing lldb.
LLDB_SKIP_STRIP:BOOL=OFF

//Native TableGen executable. Saves building one when cross-compiling.
LLDB_TABLEGEN:STRING=lldb-tblgen

//Specify the architecture to run LLDB tests as (x86|x64).  Determines
// whether tests are compiled with -m32 or -m64
LLDB_TEST_ARCH:STRING=x86_64

//The build root for building tests.
LLDB_TEST_BUILD_DIRECTORY:PATH=W:/llvm/v15.0.1/src/llvm/out/build/x64-Release/lldb-test-build.noindex

//C Compiler to use for building LLDB test inferiors
LLDB_TEST_COMPILER:PATH=W:/llvm/v15.0.1/src/llvm/out/build/x64-Release/./bin/clang.exe

//(Windows only) Enables debugging of tests in the test suite by
// showing the crash dialog when lldb crashes
LLDB_TEST_DEBUG_TEST_CRASHES:BOOL=0

//dsymutil used for generating dSYM bundles
LLDB_TEST_DSYMUTIL:PATH=W:/llvm/v15.0.1/src/llvm/out/build/x64-Release/./bin/dsymutil.exe

//lldb executable used for testing
LLDB_TEST_EXECUTABLE:PATH=W:/llvm/v15.0.1/src/llvm/out/build/x64-Release/./bin/lldb.exe

//(Windows only) Hides the console window for an inferior when
// it is launched through the test suite
LLDB_TEST_HIDE_CONSOLE_WINDOWS:BOOL=1

//The Clang module cache used by the Clang while building tests.
LLDB_TEST_MODULE_CACHE_CLANG:PATH=W:/llvm/v15.0.1/src/llvm/out/build/x64-Release/lldb-test-build.noindex/module-cache-clang

//The Clang module cache used by the Clang embedded in LLDB while
// running tests.
LLDB_TEST_MODULE_CACHE_LLDB:PATH=W:/llvm/v15.0.1/src/llvm/out/build/x64-Release/lldb-test-build.noindex/module-cache-lldb

//Specify additional arguments to pass to test runner. For example:
// '-C gcc -C clang -A i386 -A x86_64'
LLDB_TEST_USER_ARGS:STRING=

//Whether to build lldb-instr as part of LLDB
LLDB_TOOL_LLDB_INSTR_BUILD:BOOL=ON

//Whether to build lldb-server as part of LLDB
LLDB_TOOL_LLDB_SERVER_BUILD:BOOL=ON

//Whether to build lldb-vscode as part of LLDB
LLDB_TOOL_LLDB_VSCODE_BUILD:BOOL=ON

//When codesigning, use entitlements if available
LLDB_USE_ENTITLEMENTS:BOOL=ON

//Use the system's debugserver for testing (Darwin only).
LLDB_USE_SYSTEM_DEBUGSERVER:BOOL=OFF

//Use six.py shipped with system and do not install a copy of it
LLDB_USE_SYSTEM_SIX:BOOL=OFF

//Build the lld tools. If OFF, just generate build targets.
LLD_BUILD_TOOLS:BOOL=ON

//Use MinGW as the default backend for ld.lld. If OFF, ELF will
// be used.
LLD_DEFAULT_LD_LLD_IS_MINGW:BOOL=OFF

//Path for CMake subdirectory for LLD (defaults to 'lib/cmake/lld')
LLD_INSTALL_PACKAGE_DIR:STRING=lib/cmake/lld

//Path for binary subdirectory (defaults to 'bin')
LLD_TOOLS_INSTALL_DIR:PATH=bin

//Enable VTune user task tracking.
LLD_USE_VTUNE:BOOL=OFF

//Vendor-specific text for showing with version information.
LLD_VENDOR:STRING=

//Enable abi-breaking checks.  Can be WITH_ASSERTS, FORCE_ON or
// FORCE_OFF.
LLVM_ABI_BREAKING_CHECKS:STRING=WITH_ASSERTS

//OFF
LLVM_ALLOW_PROBLEMATIC_CONFIGURATIONS:BOOL=OFF

//Embed the version control system revision in LLVM
LLVM_APPEND_VC_REV:BOOL=ON

//Value Computed by CMake
LLVM_BINARY_DIR:STATIC=W:/llvm/v15.0.1/src/llvm/out/build/x64-Release

//PATH to binutils/include containing plugin-api.h for gold plugin.
LLVM_BINUTILS_INCDIR:PATH=

//Add LLVM benchmark targets to the list of default
//\ntargets. If OFF, benchmarks still could be built using Benchmarks
// target.
LLVM_BUILD_BENCHMARKS:BOOL=True

//Build the llvm documentation.
LLVM_BUILD_DOCS:BOOL=OFF

//Build the LLVM example programs. If OFF, just generate build
// targets.
LLVM_BUILD_EXAMPLES:BOOL=True

//Build compiler-rt as an external project.
LLVM_BUILD_EXTERNAL_COMPILER_RT:BOOL=OFF

//Build LLVM and tools with PGO instrumentation. May be specified
// as IR or Frontend
LLVM_BUILD_INSTRUMENTED:STRING=OFF

//Build LLVM and tools with Code Coverage instrumentation
LLVM_BUILD_INSTRUMENTED_COVERAGE:BOOL=OFF

//Build LLVM-C.dll (Windows only)
LLVM_BUILD_LLVM_C_DYLIB:BOOL=ON

//Build the LLVM runtime libraries.
LLVM_BUILD_RUNTIME:BOOL=ON

//Build the LLVM runtimes. If OFF, just generate build targets.
LLVM_BUILD_RUNTIMES:BOOL=ON

//Build LLVM unit tests. If OFF, just generate build targets.
LLVM_BUILD_TESTS:BOOL=True

//Build the LLVM tools. If OFF, just generate build targets.
LLVM_BUILD_TOOLS:BOOL=ON

//Build LLVM utility binaries. If OFF, just generate build targets.
LLVM_BUILD_UTILS:BOOL=ON

//Set to ON for a ccache enabled build
LLVM_CCACHE_BUILD:BOOL=OFF

//Sign executables and dylibs with the given identity or skip if
// empty (Darwin Only)
LLVM_CODESIGNING_IDENTITY:STRING=

//Default target for which LLVM will generate code.
LLVM_DEFAULT_TARGET_TRIPLE:STRING=x86_64-pc-windows-msvc

//Dependency debugging mode to verify correctly expressed library
// dependencies (Darwin only)
LLVM_DEPENDENCY_DEBUGGING:BOOL=OFF

//Semicolon-separated list of components to include in libLLVM,
// or "all".
LLVM_DYLIB_COMPONENTS:STRING=all

//Enable assertions
LLVM_ENABLE_ASSERTIONS:BOOL=OFF

//Enable embedding backtraces on crash.
LLVM_ENABLE_BACKTRACES:BOOL=ON

//Build bindings.
LLVM_ENABLE_BINDINGS:BOOL=ON

//Turn on memory dumps on crashes. Currently only implemented on
// Windows.
LLVM_ENABLE_CRASH_DUMPS:BOOL=OFF

//Enable crash overrides.
LLVM_ENABLE_CRASH_OVERRIDES:BOOL=ON

//No help, variable specified on the command line.
LLVM_ENABLE_CURL:STRING=ON

//Debug: Prints tablegen patterns that were used for selecting
LLVM_ENABLE_DAGISEL_COV:BOOL=OFF

//Use MSVC DIA SDK for debugging if available.
LLVM_ENABLE_DIA_SDK:BOOL=ON

//Use doxygen to generate llvm API documentation.
LLVM_ENABLE_DOXYGEN:BOOL=OFF

//Enable dump functions even when assertions are disabled
LLVM_ENABLE_DUMP:BOOL=OFF

//Enable Exception handling
LLVM_ENABLE_EH:BOOL=OFF

//Enable expensive checks
LLVM_ENABLE_EXPENSIVE_CHECKS:BOOL=OFF

//Use libffi to call external functions from the interpreter
LLVM_ENABLE_FFI:BOOL=OFF

//Enable collection of GlobalISel rule coverage
LLVM_ENABLE_GISEL_COV:BOOL=OFF

//Use cpp-httplib HTTP server library if available. Can be ON,
// OFF, or FORCE_ON
LLVM_ENABLE_HTTPLIB:STRING=OFF

//Disable optional build system features that cause problems for
// IDE generators
LLVM_ENABLE_IDE:BOOL=OFF

//Build LLVM and tools with IR PGO instrumentation (deprecated)
LLVM_ENABLE_IR_PGO:BOOL=OFF

//Use libc++ if available.
LLVM_ENABLE_LIBCXX:BOOL=OFF

//Use libedit if available.
LLVM_ENABLE_LIBEDIT:BOOL=ON

//Use libpfm for performance counters if available.
LLVM_ENABLE_LIBPFM:BOOL=ON

//Use libxml2 if available. Can be ON, OFF, or FORCE_ON
LLVM_ENABLE_LIBXML2:STRING=ON

//Use lld as C and C++ linker.
LLVM_ENABLE_LLD:BOOL=True

//Compile with -fmodules-local-submodule-visibility.
LLVM_ENABLE_LOCAL_SUBMODULE_VISIBILITY:BOOL=ON

//Build LLVM with LTO. May be specified as Thin or Full to use
// a particular kind of LTO
LLVM_ENABLE_LTO:STRING=OFF

//Compile with C++ modules enabled.
LLVM_ENABLE_MODULES:BOOL=OFF

//Compile with -gmodules.
LLVM_ENABLE_MODULE_DEBUGGING:BOOL=OFF

//Enable the new pass manager by default.
LLVM_ENABLE_NEW_PASS_MANAGER:BOOL=TRUE

//Build OCaml bindings documentation.
LLVM_ENABLE_OCAMLDOC:BOOL=ON

//OFF
LLVM_ENABLE_PDB:BOOL=OFF

//Compile with pedantic enabled.
LLVM_ENABLE_PEDANTIC:BOOL=ON

//Enable per-target runtimes directory
LLVM_ENABLE_PER_TARGET_RUNTIME_DIR:BOOL=OFF

//Build Position-Independent Code
LLVM_ENABLE_PIC:BOOL=ON

//Enable plugin support
LLVM_ENABLE_PLUGINS:BOOL=OFF

//No help, variable specified on the command line.
LLVM_ENABLE_PROJECTS:STRING=clang;clang-tools-extra;flang;libc;libclc;lld;lldb;mlir;polly;pstl;bolt

LLVM_ENABLE_PROJECTS_USED:BOOL=ON

//Enable run time type information
LLVM_ENABLE_RTTI:BOOL=OFF

//Semicolon-separated list of runtimes to build (compiler-rt;libc;libcxx;libcxxabi;libunwind;openmp),
// or "all".
LLVM_ENABLE_RUNTIMES:STRING=

//Use Sphinx to generate llvm documentation.
LLVM_ENABLE_SPHINX:BOOL=OFF

//Enable assertions that type is not scalable in implicit conversion
// from TypeSize to uint64_t and calls to getNumElements
LLVM_ENABLE_STRICT_FIXED_SIZE_VECTORS:BOOL=OFF

//Use terminfo database if available.
LLVM_ENABLE_TERMINFO:BOOL=ON

//Use threads if available.
LLVM_ENABLE_THREADS:BOOL=ON

//Emit unwind tables for the libraries
LLVM_ENABLE_UNWIND_TABLES:BOOL=ON

//Enable compiler warnings.
LLVM_ENABLE_WARNINGS:BOOL=ON

//Fail and stop if a warning is triggered.
LLVM_ENABLE_WERROR:BOOL=OFF

//Enable Support for the Z3 constraint solver in LLVM.
LLVM_ENABLE_Z3_SOLVER:BOOL=True

//Use zlib for compression/decompression if available. Can be ON,
// OFF, or FORCE_ON
LLVM_ENABLE_ZLIB:STRING=ON

//Use zstd for compression/decompression if available. Can be ON,
// OFF, or FORCE_ON
LLVM_ENABLE_ZSTD:STRING=ON

//Path for examples subdirectory (enabled by LLVM_BUILD_EXAMPLES=ON)
// (defaults to 'examples')
LLVM_EXAMPLES_INSTALL_DIR:STRING=examples

//Semicolon-separated list of experimental targets to build.
LLVM_EXPERIMENTAL_TARGETS_TO_BUILD:STRING=

//Export symbols from LLVM tools so that plugins can import them
LLVM_EXPORT_SYMBOLS_FOR_PLUGINS:BOOL=OFF

//Generate dSYM files and strip executables and libraries (Darwin
// Only)
LLVM_EXTERNALIZE_DEBUGINFO:BOOL=OFF

//No help, variable specified on the command line.
LLVM_EXTERNAL_BOLT_SOURCE_DIR:PATH=W:/llvm/v15.0.1/src/bolt

//No help, variable specified on the command line.
LLVM_EXTERNAL_CLANG_SOURCE_DIR:PATH=W:/llvm/v15.0.1/src/clang

LLVM_EXTERNAL_CLANG_TOOLS_EXTRA_SOURCE_DIR:PATH=W:/llvm/v15.0.1/src/llvm/../clang-tools-extra

//No help, variable specified on the command line.
LLVM_EXTERNAL_COMPILER_RT_SOURCE_DIR:PATH=W:/llvm/v15.0.1/src/compiler-rt

//Path to cross-project-tests source directory
LLVM_EXTERNAL_CROSS_PROJECT_TESTS_SOURCE_DIR:PATH=

//Path to dragonegg source directory
LLVM_EXTERNAL_DRAGONEGG_SOURCE_DIR:PATH=

//No help, variable specified on the command line.
LLVM_EXTERNAL_FLANG_SOURCE_DIR:PATH=W:/llvm/v15.0.1/src/flang

LLVM_EXTERNAL_LIBCLC_SOURCE_DIR:PATH=W:/llvm/v15.0.1/src/llvm/../libclc

LLVM_EXTERNAL_LIBC_SOURCE_DIR:PATH=W:/llvm/v15.0.1/src/llvm/../libc

//Command used to spawn lit
LLVM_EXTERNAL_LIT:STRING=

//No help, variable specified on the command line.
LLVM_EXTERNAL_LLDB_SOURCE_DIR:PATH=W:/llvm/v15.0.1/src/lldb

//No help, variable specified on the command line.
LLVM_EXTERNAL_LLD_SOURCE_DIR:PATH=W:/llvm/v15.0.1/src/lld

//No help, variable specified on the command line.
LLVM_EXTERNAL_MLIR_SOURCE_DIR:PATH=W:/llvm/v15.0.1/src/mlir

//No help, variable specified on the command line.
LLVM_EXTERNAL_OPENMP_SOURCE_DIR:PATH=W:/llvm/v15.0.1/src/openmp

//No help, variable specified on the command line.
LLVM_EXTERNAL_POLLY_SOURCE_DIR:PATH=W:/llvm/v15.0.1/src/polly

//Optional arguments for the native tool used in CMake --build
// invocations for external projects.
LLVM_EXTERNAL_PROJECT_BUILD_TOOL_ARGS:STRING=

LLVM_EXTERNAL_PSTL_SOURCE_DIR:PATH=W:/llvm/v15.0.1/src/llvm/../pstl

//Additional options to pass to llvm/utils/extract_symbols.py.
//\n  These cannot override the options set by cmake, but can add
// extra options
//\n  such as --tools.
LLVM_EXTRACT_SYMBOLS_FLAGS:STRING=

//Enable statistics collection for builds that wouldn't normally
// enable it
LLVM_FORCE_ENABLE_STATS:BOOL=OFF

//Set to ON to force using an old, unsupported host toolchain.
LLVM_FORCE_USE_OLD_TOOLCHAIN:BOOL=OFF

//Host on which LLVM binaries will run
LLVM_HOST_TRIPLE:STRING=x86_64-pc-windows-msvc

//Generate benchmark targets. If OFF, benchmarks can't be built.
LLVM_INCLUDE_BENCHMARKS:BOOL=ON

//Generate build targets for llvm documentation.
LLVM_INCLUDE_DOCS:BOOL=ON

//Include DXIL tests
LLVM_INCLUDE_DXIL_TESTS:BOOL=OFF

//Generate build targets for the LLVM examples
LLVM_INCLUDE_EXAMPLES:BOOL=ON

//Include the Go bindings tests in test build targets.
LLVM_INCLUDE_GO_TESTS:BOOL=OFF

//Generate build targets for the LLVM runtimes.
LLVM_INCLUDE_RUNTIMES:BOOL=ON

//Generate build targets for the LLVM unit tests.
LLVM_INCLUDE_TESTS:BOOL=ON

//Generate build targets for the LLVM tools.
LLVM_INCLUDE_TOOLS:BOOL=ON

//Generate build targets for the LLVM utils.
LLVM_INCLUDE_UTILS:BOOL=ON

//Install symlinks from the binutils tool names to the corresponding
// LLVM tools.
LLVM_INSTALL_BINUTILS_SYMLINKS:BOOL=OFF

//Install symlinks from the cctools tool names to the corresponding
// LLVM tools.
LLVM_INSTALL_CCTOOLS_SYMLINKS:BOOL=OFF

//Doxygen-generated HTML documentation install directory
LLVM_INSTALL_DOXYGEN_HTML_DIR:STRING=share/doc/LLVM/llvm/doxygen-html

//Install the modulemap files in the 'install' target.
LLVM_INSTALL_MODULEMAPS:BOOL=OFF

//OCamldoc-generated HTML documentation install directory
LLVM_INSTALL_OCAMLDOC_HTML_DIR:STRING=share/doc/LLVM/llvm/ocaml-html

//Path for CMake subdirectory for LLVM (defaults to 'lib/cmake/llvm')
LLVM_INSTALL_PACKAGE_DIR:STRING=lib/cmake/llvm

//Only include toolchain files in the 'install' target.
LLVM_INSTALL_TOOLCHAIN_ONLY:BOOL=OFF

//Include utility binaries in the 'install' target.
LLVM_INSTALL_UTILS:BOOL=OFF

//Replace the Windows CRT allocator with any of {rpmalloc|mimalloc|snmalloc}.
// Only works with /MT enabled.
LLVM_INTEGRATED_CRT_ALLOC:PATH=

//Value Computed by CMake
LLVM_IS_TOP_LEVEL:STATIC=ON

//Define suffix of library directory name (32/64)
LLVM_LIBDIR_SUFFIX:STRING=

//Path to fuzzing library for linking with fuzz targets
LLVM_LIB_FUZZING_ENGINE:PATH=

//Default options for lit
LLVM_LIT_ARGS:STRING=-sv

//Path to GnuWin32 tools
LLVM_LIT_TOOLS_DIR:PATH=

//If set, an absolute path added as rpath on binaries that do not
// already contain an executable-relative rpath.
LLVM_LOCAL_RPATH:FILEPATH=

//Do not add comments to DAG ISel
LLVM_OMIT_DAGISEL_COMMENTS:BOOL=ON

//Force TableGen to be built with optimization
LLVM_OPTIMIZED_TABLEGEN:BOOL=OFF

//Pass -O1 on debug sanitizer builds
LLVM_OPTIMIZE_SANITIZED_BUILDS:BOOL=ON

//Define the maximum number of concurrent compilation jobs (Ninja
// only).
LLVM_PARALLEL_COMPILE_JOBS:STRING=

//Define the maximum number of concurrent link jobs (Ninja only).
LLVM_PARALLEL_LINK_JOBS:STRING=

//Statically link Polly into tools (if available)
LLVM_POLLY_LINK_INTO_TOOLS:BOOL=ON

//Profiling data file to use when compiling in order to improve
// runtime performance.
LLVM_PROFDATA_FILE:FILEPATH=

//Value Computed by CMake
LLVM_SOURCE_DIR:STATIC=W:/llvm/v15.0.1/src/llvm

//Use prefix for sources
LLVM_SOURCE_PREFIX:STRING=

//.spec file to use for srpm generation
LLVM_SRPM_USER_BINARY_SPECFILE:FILEPATH=W:/llvm/v15.0.1/src/llvm/llvm.spec.in

//Statically link the standard library.
LLVM_STATIC_LINK_CXX_STDLIB:BOOL=OFF

//Native TableGen executable. Saves building one when cross-compiling.
LLVM_TABLEGEN:STRING=llvm-tblgen

//Semicolon-separated list of targets to build, or "all".
LLVM_TARGETS_TO_BUILD:STRING=all

//Set target to use for LLVM JIT or use "host" for automatic detection.
LLVM_TARGET_ARCH:STRING=host

//The name of environment variable to override default target.
// Disabled by blank.
LLVM_TARGET_TRIPLE_ENV:STRING=

//Set to ON to only warn when using a toolchain which is about
// to be deprecated, instead of emitting an error.
LLVM_TEMPORARILY_ALLOW_OLD_TOOLCHAIN:BOOL=OFF

//Set ThinLTO cache path. This can be used when building LLVM from
// several different directiories.
LLVM_THINLTO_CACHE_PATH:STRING=W:/llvm/v15.0.1/src/llvm/out/build/x64-Release/lto.cache

//Path for binary subdirectory (defaults to 'bin')
LLVM_TOOLS_INSTALL_DIR:STRING=bin

//Whether to build bolt as part of LLVM
LLVM_TOOL_BOLT_BUILD:BOOL=TRUE

//Whether to build bugpoint as part of LLVM
LLVM_TOOL_BUGPOINT_BUILD:BOOL=ON

//Whether to build bugpoint-passes as part of LLVM
LLVM_TOOL_BUGPOINT_PASSES_BUILD:BOOL=ON

//Whether to build clang as part of LLVM
LLVM_TOOL_CLANG_BUILD:BOOL=TRUE

//Whether to build clang-tools-extra as part of LLVM
LLVM_TOOL_CLANG_TOOLS_EXTRA_BUILD:BOOL=TRUE

//Whether to build compiler-rt as part of LLVM
LLVM_TOOL_COMPILER_RT_BUILD:BOOL=FALSE

//Whether to build cross-project-tests as part of LLVM
LLVM_TOOL_CROSS_PROJECT_TESTS_BUILD:BOOL=FALSE

//Whether to build dragonegg as part of LLVM
LLVM_TOOL_DRAGONEGG_BUILD:BOOL=OFF

//Whether to build dsymutil as part of LLVM
LLVM_TOOL_DSYMUTIL_BUILD:BOOL=ON

//Whether to build dxil-dis as part of LLVM
LLVM_TOOL_DXIL_DIS_BUILD:BOOL=ON

//Whether to build flang as part of LLVM
LLVM_TOOL_FLANG_BUILD:BOOL=TRUE

//Whether to build gold as part of LLVM
LLVM_TOOL_GOLD_BUILD:BOOL=ON

//Whether to build LIBCLC as part of LLVM
LLVM_TOOL_LIBCLC_BUILD:BOOL=TRUE

//Whether to build LIBCXXABI as part of LLVM
LLVM_TOOL_LIBCXXABI_BUILD:BOOL=FALSE

//Whether to build LIBCXX as part of LLVM
LLVM_TOOL_LIBCXX_BUILD:BOOL=FALSE

//Whether to build LIBC as part of LLVM
LLVM_TOOL_LIBC_BUILD:BOOL=TRUE

//Whether to build LIBUNWIND as part of LLVM
LLVM_TOOL_LIBUNWIND_BUILD:BOOL=FALSE

//Whether to build llc as part of LLVM
LLVM_TOOL_LLC_BUILD:BOOL=ON

//Whether to build lldb as part of LLVM
LLVM_TOOL_LLDB_BUILD:BOOL=TRUE

//Whether to build lld as part of LLVM
LLVM_TOOL_LLD_BUILD:BOOL=TRUE

//Whether to build lli as part of LLVM
LLVM_TOOL_LLI_BUILD:BOOL=ON

//Whether to build llvm-ar as part of LLVM
LLVM_TOOL_LLVM_AR_BUILD:BOOL=ON

//Whether to build llvm-as as part of LLVM
LLVM_TOOL_LLVM_AS_BUILD:BOOL=ON

//Whether to build llvm-as-fuzzer as part of LLVM
LLVM_TOOL_LLVM_AS_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-bcanalyzer as part of LLVM
LLVM_TOOL_LLVM_BCANALYZER_BUILD:BOOL=ON

//Whether to build llvm-cat as part of LLVM
LLVM_TOOL_LLVM_CAT_BUILD:BOOL=ON

//Whether to build llvm-cfi-verify as part of LLVM
LLVM_TOOL_LLVM_CFI_VERIFY_BUILD:BOOL=ON

//Whether to build llvm-config as part of LLVM
LLVM_TOOL_LLVM_CONFIG_BUILD:BOOL=ON

//Whether to build llvm-cov as part of LLVM
LLVM_TOOL_LLVM_COV_BUILD:BOOL=ON

//Whether to build llvm-cvtres as part of LLVM
LLVM_TOOL_LLVM_CVTRES_BUILD:BOOL=ON

//Whether to build llvm-cxxdump as part of LLVM
LLVM_TOOL_LLVM_CXXDUMP_BUILD:BOOL=ON

//Whether to build llvm-cxxfilt as part of LLVM
LLVM_TOOL_LLVM_CXXFILT_BUILD:BOOL=ON

//Whether to build llvm-cxxmap as part of LLVM
LLVM_TOOL_LLVM_CXXMAP_BUILD:BOOL=ON

//Whether to build llvm-c-test as part of LLVM
LLVM_TOOL_LLVM_C_TEST_BUILD:BOOL=ON

//Whether to build llvm-debuginfod as part of LLVM
LLVM_TOOL_LLVM_DEBUGINFOD_BUILD:BOOL=ON

//Whether to build llvm-debuginfod-find as part of LLVM
LLVM_TOOL_LLVM_DEBUGINFOD_FIND_BUILD:BOOL=ON

//Whether to build llvm-diff as part of LLVM
LLVM_TOOL_LLVM_DIFF_BUILD:BOOL=ON

//Whether to build llvm-dis as part of LLVM
LLVM_TOOL_LLVM_DIS_BUILD:BOOL=ON

//Whether to build llvm-dis-fuzzer as part of LLVM
LLVM_TOOL_LLVM_DIS_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-dlang-demangle-fuzzer as part of LLVM
LLVM_TOOL_LLVM_DLANG_DEMANGLE_FUZZER_BUILD:BOOL=ON

//Whether to build LLVM_DRIVER as part of LLVM
LLVM_TOOL_LLVM_DRIVER_BUILD:BOOL=OFF

//Whether to build llvm-dwarfdump as part of LLVM
LLVM_TOOL_LLVM_DWARFDUMP_BUILD:BOOL=ON

//Whether to build llvm-dwarfutil as part of LLVM
LLVM_TOOL_LLVM_DWARFUTIL_BUILD:BOOL=ON

//Whether to build llvm-dwp as part of LLVM
LLVM_TOOL_LLVM_DWP_BUILD:BOOL=ON

//Whether to build llvm-exegesis as part of LLVM
LLVM_TOOL_LLVM_EXEGESIS_BUILD:BOOL=ON

//Whether to build llvm-extract as part of LLVM
LLVM_TOOL_LLVM_EXTRACT_BUILD:BOOL=ON

//Whether to build llvm-go as part of LLVM
LLVM_TOOL_LLVM_GO_BUILD:BOOL=ON

//Whether to build llvm-gsymutil as part of LLVM
LLVM_TOOL_LLVM_GSYMUTIL_BUILD:BOOL=ON

//Whether to build llvm-ifs as part of LLVM
LLVM_TOOL_LLVM_IFS_BUILD:BOOL=ON

//Whether to build llvm-isel-fuzzer as part of LLVM
LLVM_TOOL_LLVM_ISEL_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-itanium-demangle-fuzzer as part of LLVM
LLVM_TOOL_LLVM_ITANIUM_DEMANGLE_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-jitlink as part of LLVM
LLVM_TOOL_LLVM_JITLINK_BUILD:BOOL=ON

//Whether to build LLVM_JITLISTENER as part of LLVM
LLVM_TOOL_LLVM_JITLISTENER_BUILD:BOOL=ON

//Whether to build llvm-libtool-darwin as part of LLVM
LLVM_TOOL_LLVM_LIBTOOL_DARWIN_BUILD:BOOL=ON

//Whether to build llvm-link as part of LLVM
LLVM_TOOL_LLVM_LINK_BUILD:BOOL=ON

//Whether to build llvm-lipo as part of LLVM
LLVM_TOOL_LLVM_LIPO_BUILD:BOOL=ON

//Whether to build llvm-lto2 as part of LLVM
LLVM_TOOL_LLVM_LTO2_BUILD:BOOL=ON

//Whether to build llvm-lto as part of LLVM
LLVM_TOOL_LLVM_LTO_BUILD:BOOL=ON

//Whether to build llvm-mca as part of LLVM
LLVM_TOOL_LLVM_MCA_BUILD:BOOL=ON

//Whether to build llvm-mc-assemble-fuzzer as part of LLVM
LLVM_TOOL_LLVM_MC_ASSEMBLE_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-mc as part of LLVM
LLVM_TOOL_LLVM_MC_BUILD:BOOL=ON

//Whether to build llvm-mc-disassemble-fuzzer as part of LLVM
LLVM_TOOL_LLVM_MC_DISASSEMBLE_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-microsoft-demangle-fuzzer as part of LLVM
LLVM_TOOL_LLVM_MICROSOFT_DEMANGLE_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-ml as part of LLVM
LLVM_TOOL_LLVM_ML_BUILD:BOOL=ON

//Whether to build llvm-modextract as part of LLVM
LLVM_TOOL_LLVM_MODEXTRACT_BUILD:BOOL=ON

//Whether to build llvm-mt as part of LLVM
LLVM_TOOL_LLVM_MT_BUILD:BOOL=ON

//Whether to build llvm-nm as part of LLVM
LLVM_TOOL_LLVM_NM_BUILD:BOOL=ON

//Whether to build llvm-objcopy as part of LLVM
LLVM_TOOL_LLVM_OBJCOPY_BUILD:BOOL=ON

//Whether to build llvm-objdump as part of LLVM
LLVM_TOOL_LLVM_OBJDUMP_BUILD:BOOL=ON

//Whether to build llvm-opt-fuzzer as part of LLVM
LLVM_TOOL_LLVM_OPT_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-opt-report as part of LLVM
LLVM_TOOL_LLVM_OPT_REPORT_BUILD:BOOL=ON

//Whether to build llvm-pdbutil as part of LLVM
LLVM_TOOL_LLVM_PDBUTIL_BUILD:BOOL=ON

//Whether to build llvm-profdata as part of LLVM
LLVM_TOOL_LLVM_PROFDATA_BUILD:BOOL=ON

//Whether to build llvm-profgen as part of LLVM
LLVM_TOOL_LLVM_PROFGEN_BUILD:BOOL=ON

//Whether to build llvm-rc as part of LLVM
LLVM_TOOL_LLVM_RC_BUILD:BOOL=ON

//Whether to build llvm-readobj as part of LLVM
LLVM_TOOL_LLVM_READOBJ_BUILD:BOOL=ON

//Whether to build llvm-reduce as part of LLVM
LLVM_TOOL_LLVM_REDUCE_BUILD:BOOL=ON

//Whether to build llvm-remark-size-diff as part of LLVM
LLVM_TOOL_LLVM_REMARK_SIZE_DIFF_BUILD:BOOL=ON

//Whether to build llvm-rtdyld as part of LLVM
LLVM_TOOL_LLVM_RTDYLD_BUILD:BOOL=ON

//Whether to build llvm-rust-demangle-fuzzer as part of LLVM
LLVM_TOOL_LLVM_RUST_DEMANGLE_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-shlib as part of LLVM
LLVM_TOOL_LLVM_SHLIB_BUILD:BOOL=ON

//Whether to build llvm-sim as part of LLVM
LLVM_TOOL_LLVM_SIM_BUILD:BOOL=ON

//Whether to build llvm-size as part of LLVM
LLVM_TOOL_LLVM_SIZE_BUILD:BOOL=ON

//Whether to build llvm-special-case-list-fuzzer as part of LLVM
LLVM_TOOL_LLVM_SPECIAL_CASE_LIST_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-split as part of LLVM
LLVM_TOOL_LLVM_SPLIT_BUILD:BOOL=ON

//Whether to build llvm-stress as part of LLVM
LLVM_TOOL_LLVM_STRESS_BUILD:BOOL=ON

//Whether to build llvm-strings as part of LLVM
LLVM_TOOL_LLVM_STRINGS_BUILD:BOOL=ON

//Whether to build llvm-symbolizer as part of LLVM
LLVM_TOOL_LLVM_SYMBOLIZER_BUILD:BOOL=ON

//Whether to build llvm-tapi-diff as part of LLVM
LLVM_TOOL_LLVM_TAPI_DIFF_BUILD:BOOL=ON

//Whether to build llvm-tli-checker as part of LLVM
LLVM_TOOL_LLVM_TLI_CHECKER_BUILD:BOOL=ON

//Whether to build llvm-undname as part of LLVM
LLVM_TOOL_LLVM_UNDNAME_BUILD:BOOL=ON

//Whether to build llvm-xray as part of LLVM
LLVM_TOOL_LLVM_XRAY_BUILD:BOOL=ON

//Whether to build llvm-yaml-numeric-parser-fuzzer as part of LLVM
LLVM_TOOL_LLVM_YAML_NUMERIC_PARSER_FUZZER_BUILD:BOOL=ON

//Whether to build llvm-yaml-parser-fuzzer as part of LLVM
LLVM_TOOL_LLVM_YAML_PARSER_FUZZER_BUILD:BOOL=ON

//Whether to build lto as part of LLVM
LLVM_TOOL_LTO_BUILD:BOOL=ON

//Whether to build mlir as part of LLVM
LLVM_TOOL_MLIR_BUILD:BOOL=TRUE

//Whether to build obj2yaml as part of LLVM
LLVM_TOOL_OBJ2YAML_BUILD:BOOL=ON

//Whether to build openmp as part of LLVM
LLVM_TOOL_OPENMP_BUILD:BOOL=FALSE

//Whether to build opt as part of LLVM
LLVM_TOOL_OPT_BUILD:BOOL=ON

//Whether to build opt-viewer as part of LLVM
LLVM_TOOL_OPT_VIEWER_BUILD:BOOL=ON

//Whether to build polly as part of LLVM
LLVM_TOOL_POLLY_BUILD:BOOL=TRUE

//Whether to build PSTL as part of LLVM
LLVM_TOOL_PSTL_BUILD:BOOL=TRUE

//Whether to build remarks-shlib as part of LLVM
LLVM_TOOL_REMARKS_SHLIB_BUILD:BOOL=ON

//Whether to build sancov as part of LLVM
LLVM_TOOL_SANCOV_BUILD:BOOL=ON

//Whether to build sanstats as part of LLVM
LLVM_TOOL_SANSTATS_BUILD:BOOL=ON

//Whether to build split-file as part of LLVM
LLVM_TOOL_SPLIT_FILE_BUILD:BOOL=ON

//Whether to build verify-uselistorder as part of LLVM
LLVM_TOOL_VERIFY_USELISTORDER_BUILD:BOOL=ON

//Whether to build vfabi-demangle-fuzzer as part of LLVM
LLVM_TOOL_VFABI_DEMANGLE_FUZZER_BUILD:BOOL=ON

//Whether to build xcode-toolchain as part of LLVM
LLVM_TOOL_XCODE_TOOLCHAIN_BUILD:BOOL=ON

//Whether to build yaml2obj as part of LLVM
LLVM_TOOL_YAML2OBJ_BUILD:BOOL=ON

//Compile flags set to enable UBSan. Only used if LLVM_USE_SANITIZER
// contains 'Undefined'.
LLVM_UBSAN_FLAGS:STRING=-fsanitize=undefined -fno-sanitize=vptr,function -fno-sanitize-recover=all

//Optimize llvm_unreachable() as undefined behavior (default),
// guaranteed trap when OFF
LLVM_UNREACHABLE_OPTIMIZE:BOOL=ON

//Specify VC++ CRT to use for Release configurations.
LLVM_USE_CRT_RELEASE:STRING=MD

//Enable solution folders in Visual Studio. Disable for Express
// versions.
LLVM_USE_FOLDERS:BOOL=ON

//Use Intel JIT API to inform Intel(R) VTune(TM) Amplifier XE 2011
// about JIT code
LLVM_USE_INTEL_JITEVENTS:BOOL=OFF

//Use opagent JIT interface to inform OProfile about JIT code
LLVM_USE_OPROFILE:BOOL=OFF

//Use perf JIT interface to inform perf about JIT code
LLVM_USE_PERF:BOOL=OFF

//Use relative paths in debug info
LLVM_USE_RELATIVE_PATHS_IN_DEBUG_INFO:BOOL=OFF

//Use relative paths in sources and debug info
LLVM_USE_RELATIVE_PATHS_IN_FILES:BOOL=OFF

//Define the sanitizer used to build binaries and tests.
LLVM_USE_SANITIZER:STRING=

//Use -gsplit-dwarf when compiling llvm and --gdb-index when linking.
LLVM_USE_SPLIT_DWARF:BOOL=OFF

//Path to install LLVM utilities (enabled by LLVM_INSTALL_UTILS=ON)
// (defaults to LLVM_TOOLS_INSTALL_DIR)
LLVM_UTILS_INSTALL_DIR:STRING=bin

//Show target and host info when tools are invoked with --version.
LLVM_VERSION_PRINTER_SHOW_HOST_TARGET_INFO:BOOL=ON

//Value profile counters to use per site for IR PGO with Clang
LLVM_VP_COUNTERS_PER_SITE:STRING=1.5

//Prefer path names with forward slashes on Windows.
LLVM_WINDOWS_PREFER_FORWARD_SLASH:BOOL=OFF

//If set, argument to clang-cl's /winsysroot
LLVM_WINSYSROOT:STRING=

//Install directory of the Z3 solver.
LLVM_Z3_INSTALL_DIR:STRING=

//Path to a file.
LibEdit_INCLUDE_DIRS:PATH=LibEdit_INCLUDE_DIRS-NOTFOUND

//Path to a library.
LibEdit_LIBRARIES:FILEPATH=LibEdit_LIBRARIES-NOTFOUND

//Builds libMLIR-C shared library.
MLIR_BUILD_MLIR_C_DYLIB:BOOL=0

//Prime the python detection by searching for a full 'Development'
//        component first (temporary while diagnosing environment
// specific Python        detection issues)
MLIR_DETECT_PYTHON_ENV_PRIME_SEARCH:BOOL=1

//Enables building of Python bindings.
MLIR_ENABLE_BINDINGS_PYTHON:BOOL=0

//No help, variable specified on the command line.
MLIR_ENABLE_CUDA_RUNNER:BOOL=True

//Enable building the mlir ROCm runner
MLIR_ENABLE_ROCM_RUNNER:BOOL=0

//Enable building the mlir SPIR-V cpu runner
MLIR_ENABLE_SPIRV_CPU_RUNNER:BOOL=0

//Enable building the mlir Vulkan runner
MLIR_ENABLE_VULKAN_RUNNER:BOOL=0

//Generate build targets for the MLIR docs.
MLIR_INCLUDE_DOCS:BOOL=ON

//Generate build targets for the MLIR integration tests.
MLIR_INCLUDE_INTEGRATION_TESTS:BOOL=OFF

//Generate build targets for the MLIR unit tests.
MLIR_INCLUDE_TESTS:BOOL=ON

//Installs object files needed for add_mlir_aggregate to work out
// of     tree. Package maintainers can disable this to exclude
// these assets if     not desired. Enabling this will result in
// object files being written     under lib/objects-{CMAKE_BUILD_TYPE}.
MLIR_INSTALL_AGGREGATE_OBJECTS:BOOL=1

//Path for CMake subdirectory for Polly (defaults to 'lib/cmake/polly')
MLIR_INSTALL_PACKAGE_DIR:STRING=lib/cmake/mlir

//Native mlir-linalg-ods-yaml-gen executable. Saves building one
// when cross-compiling.
MLIR_LINALG_ODS_YAML_GEN:STRING=mlir-linalg-ods-yaml-gen

//Native TableGen executable. Saves building one when cross-compiling.
MLIR_PDLL_TABLEGEN:STRING=mlir-pdll

//Native TableGen executable. Saves building one when cross-compiling.
MLIR_TABLEGEN:STRING=mlir-tblgen

//Path for binary subdirectory (defaults to 'bin')
MLIR_TOOLS_INSTALL_DIR:PATH=bin

//Path to the DIA SDK
MSVC_DIA_SDK_DIR:PATH=D:/tools/msvs/msvs.2022/DIA SDK

//Path to a program.
MSYS_CMD:FILEPATH=MSYS_CMD-NOTFOUND

//Ninja version number
NINJA_VERSION:STRING=1.11.0

//Path to a program.
OCAMLFIND:FILEPATH=OCAMLFIND-NOTFOUND

//Enable building libomptarget for offloading.
OPENMP_ENABLE_LIBOMPTARGET:BOOL=OFF

//Enable time profiling for libomptarget.
OPENMP_ENABLE_LIBOMPTARGET_PROFILING:BOOL=OFF

//Enable time profiling for libomp.
OPENMP_ENABLE_LIBOMP_PROFILING:BOOL=OFF

//Enable building ompt based tools for OpenMP.
OPENMP_ENABLE_OMPT_TOOLS:BOOL=OFF

//Build dll with MSVC naming scheme.
OPENMP_MSVC_NAME_SCHEME:BOOL=OFF

//Extra compiler flags to send to the test compiler.
OPENMP_TEST_FLAGS:STRING=

//OpenMP compiler flag to use for testing OpenMP runtime libraries.
OPENMP_TEST_OPENMP_FLAGS:STRING=-fopenmp  -fno-experimental-isel

//The curses panel library
PANEL_LIBRARIES:FILEPATH=PANEL_LIBRARIES-NOTFOUND

//Path to a program.
PERL_EXECUTABLE:FILEPATH=F:/sdks/perl/perl/bin/perl.exe

//Arguments to supply to pkg-config
PKG_CONFIG_ARGN:STRING=

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=D:/env/sdks/vcpkg/installed/x64-windows/tools/pkgconf/pkgconf.exe

//Use the bundled version of libisl included in Polly
POLLY_BUNDLED_ISL:BOOL=ON

//Enable GPGPU code generation feature
POLLY_ENABLE_GPGPU_CODEGEN:BOOL=OFF

//Path for CMake subdirectory for Polly (defaults to 'lib/cmake/polly')
POLLY_INSTALL_PACKAGE_DIR:STRING=lib/cmake/polly

//Enable IEEE binary128 as default long double format on PowerPC
// Linux.
PPC_LINUX_DEFAULT_IEEELONGDOUBLE:BOOL=OFF

//Failed to find python module 'pygments'
PY_PYGMENTS_FOUND:BOOL=OFF

//Failed to find python module 'pygments.lexers.c_cpp'
PY_PYGMENTS_LEXERS_C_CPP_FOUND:BOOL=OFF

//Failed to find python module 'yaml'
PY_YAML_FOUND:BOOL=OFF

//Path to a program.
SWIG_EXECUTABLE:FILEPATH=SWIG_EXECUTABLE-NOTFOUND

//Path to TensorFlow pip install dir
TENSORFLOW_AOT_PATH:PATH=

//Path to TensorFlow C library install
TENSORFLOW_C_LIB_PATH:PATH=

//Plist name
TOOL_INFO_PLIST:STRING=Info.plist

//Automatically copy dependencies into the output directory for
// executables.
VCPKG_APPLOCAL_DEPS:BOOL=ON

//The directory which contains the installed libraries for each
// triplet
VCPKG_INSTALLED_DIR:PATH=D:/env/sdks/vcpkg/installed

//The path to the vcpkg manifest directory.
VCPKG_MANIFEST_DIR:PATH=

//Use manifest mode, as opposed to classic mode.
VCPKG_MANIFEST_MODE:BOOL=OFF

//Appends the vcpkg paths to CMAKE_PREFIX_PATH, CMAKE_LIBRARY_PATH
// and CMAKE_FIND_ROOT_PATH so that vcpkg libraries/packages are
// found after toolchain/system libraries/packages.
VCPKG_PREFER_SYSTEM_LIBS:BOOL=OFF

//Enable the setup of CMAKE_PROGRAM_PATH to vcpkg paths
VCPKG_SETUP_CMAKE_PROGRAM_PATH:BOOL=ON

//Vcpkg target triplet (ex. x86-windows)
VCPKG_TARGET_TRIPLET:STRING=x64-windows

//Enables messages from the VCPKG toolchain for debugging purposes.
VCPKG_VERBOSE:BOOL=True

//(experimental) Automatically copy dependencies into the install
// target directory for executables. Requires CMake 3.14.
X_VCPKG_APPLOCAL_DEPS_INSTALL:BOOL=OFF

//(experimental) Add USES_TERMINAL to VCPKG_APPLOCAL_DEPS to force
// serialization.
X_VCPKG_APPLOCAL_DEPS_SERIALIZED:BOOL=OFF

//Path to a file.
Z3_INCLUDE_DIR:PATH=D:/env/sdks/vcpkg/installed/x64-windows/include

//Path to a library.
Z3_LIBRARIES:FILEPATH=D:/env/sdks/vcpkg/installed/x64-windows/lib/libz3.lib

//Path to a file.
ZLIB_INCLUDE_DIR:PATH=D:/env/sdks/vcpkg/installed/x64-windows/include

//Path to a library.
ZLIB_LIBRARY_DEBUG:FILEPATH=D:/env/sdks/vcpkg/installed/x64-windows/debug/lib/zlibd.lib

//Path to a library.
ZLIB_LIBRARY_RELEASE:FILEPATH=D:/env/sdks/vcpkg/installed/x64-windows/lib/zlib.lib

//Path to a program.
Z_VCPKG_CL:FILEPATH=D:/tools/msvs/msvs.2022/VC/Tools/MSVC/14.34.31823/bin/Hostx64/x64/cl.exe

//Path to a program.
Z_VCPKG_PWSH_PATH:FILEPATH=B:/tools/pwsh/bin/pwsh.exe

//The directory which contains the installed libraries for each
// triplet
_VCPKG_INSTALLED_DIR:PATH=D:/env/sdks/vcpkg/installed

//Value Computed by CMake
benchmark_BINARY_DIR:STATIC=W:/llvm/v15.0.1/src/llvm/out/build/x64-Release/third-party/benchmark

//Value Computed by CMake
benchmark_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
benchmark_SOURCE_DIR:STATIC=W:/llvm/v15.0.1/src/third-party/benchmark

//The directory containing a CMake configuration file for hsa-runtime64.
hsa-runtime64_DIR:PATH=hsa-runtime64_DIR-NOTFOUND

//Path to a library.
pkgcfg_lib_PC_LIBXML_libxml2:FILEPATH=D:/env/sdks/vcpkg/installed/x64-windows/lib/libxml2.lib

//Path to a library.
pkgcfg_lib_PC_LIBXML_lzma:FILEPATH=D:/env/sdks/vcpkg/installed/x64-windows/lib/lzma.lib

//Path to a library.
pkgcfg_lib_PC_LIBXML_zlib:FILEPATH=D:/env/sdks/vcpkg/installed/x64-windows/lib/zlib.lib

//The directory containing a CMake configuration file for zstd.
zstd_DIR:PATH=D:/env/sdks/vcpkg/installed/x64-windows/share/zstd


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: BOLT_TOOLS_INSTALL_DIR
BOLT_TOOLS_INSTALL_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Backtrace_HEADER
Backtrace_HEADER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Backtrace_INCLUDE_DIR
Backtrace_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Backtrace_LIBRARY
Backtrace_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_EXECUTABLE_VERSION
CLANG_EXECUTABLE_VERSION-ADVANCED:INTERNAL=1
//Have include sys/resource.h
CLANG_HAVE_RLIMITS:INTERNAL=
//ADVANCED property for variable: CLANG_TOOLS_INSTALL_DIR
CLANG_TOOLS_INSTALL_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_AMDGPU_ARCH_BUILD
CLANG_TOOL_AMDGPU_ARCH_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_APINOTES_TEST_BUILD
CLANG_TOOL_APINOTES_TEST_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_ARCMT_TEST_BUILD
CLANG_TOOL_ARCMT_TEST_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_CHECK_BUILD
CLANG_TOOL_CLANG_CHECK_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_DIFF_BUILD
CLANG_TOOL_CLANG_DIFF_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_EXTDEF_MAPPING_BUILD
CLANG_TOOL_CLANG_EXTDEF_MAPPING_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_FORMAT_BUILD
CLANG_TOOL_CLANG_FORMAT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_FORMAT_VS_BUILD
CLANG_TOOL_CLANG_FORMAT_VS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_FUZZER_BUILD
CLANG_TOOL_CLANG_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_IMPORT_TEST_BUILD
CLANG_TOOL_CLANG_IMPORT_TEST_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_LINKER_WRAPPER_BUILD
CLANG_TOOL_CLANG_LINKER_WRAPPER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_NVLINK_WRAPPER_BUILD
CLANG_TOOL_CLANG_NVLINK_WRAPPER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_OFFLOAD_BUNDLER_BUILD
CLANG_TOOL_CLANG_OFFLOAD_BUNDLER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_OFFLOAD_PACKAGER_BUILD
CLANG_TOOL_CLANG_OFFLOAD_PACKAGER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_OFFLOAD_WRAPPER_BUILD
CLANG_TOOL_CLANG_OFFLOAD_WRAPPER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_REFACTOR_BUILD
CLANG_TOOL_CLANG_REFACTOR_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_RENAME_BUILD
CLANG_TOOL_CLANG_RENAME_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_REPL_BUILD
CLANG_TOOL_CLANG_REPL_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_SCAN_DEPS_BUILD
CLANG_TOOL_CLANG_SCAN_DEPS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_CLANG_SHLIB_BUILD
CLANG_TOOL_CLANG_SHLIB_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_C_ARCMT_TEST_BUILD
CLANG_TOOL_C_ARCMT_TEST_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_C_INDEX_TEST_BUILD
CLANG_TOOL_C_INDEX_TEST_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_DIAGTOOL_BUILD
CLANG_TOOL_DIAGTOOL_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_DRIVER_BUILD
CLANG_TOOL_DRIVER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_LIBCLANG_BUILD
CLANG_TOOL_LIBCLANG_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_SCAN_BUILD_BUILD
CLANG_TOOL_SCAN_BUILD_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_SCAN_BUILD_PY_BUILD
CLANG_TOOL_SCAN_BUILD_PY_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CLANG_TOOL_SCAN_VIEW_BUILD
CLANG_TOOL_SCAN_VIEW_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_COMPILER
CMAKE_ASM_COMPILER-ADVANCED:INTERNAL=1
CMAKE_ASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS
CMAKE_ASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_DEBUG
CMAKE_ASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_MINSIZEREL
CMAKE_ASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELEASE
CMAKE_ASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_COMPILER
CMAKE_ASM_MASM_COMPILER-ADVANCED:INTERNAL=1
CMAKE_ASM_MASM_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS
CMAKE_ASM_MASM_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_DEBUG
CMAKE_ASM_MASM_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_MINSIZEREL
CMAKE_ASM_MASM_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_RELEASE
CMAKE_ASM_MASM_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_ASM_MASM_FLAGS_RELWITHDEBINFO
CMAKE_ASM_MASM_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=w:/llvm/v15.0.1/src/llvm/out/build/x64-Release
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=24
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=202208181
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=D:/tools/msvs/msvs.2022/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cmake.exe
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=D:/tools/msvs/msvs.2022/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/cpack.exe
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=D:/tools/msvs/msvs.2022/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/bin/ctest.exe
//ADVANCED property for variable: CMAKE_CUDA_COMPILER
CMAKE_CUDA_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CUDA_FLAGS
CMAKE_CUDA_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CUDA_FLAGS_DEBUG
CMAKE_CUDA_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CUDA_FLAGS_MINSIZEREL
CMAKE_CUDA_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CUDA_FLAGS_RELEASE
CMAKE_CUDA_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CUDA_FLAGS_RELWITHDEBINFO
CMAKE_CUDA_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CUDA_STANDARD_LIBRARIES
CMAKE_CUDA_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_STANDARD_LIBRARIES
CMAKE_CXX_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_STANDARD_LIBRARIES
CMAKE_C_STANDARD_LIBRARIES-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=Unknown
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Ninja
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Test CMAKE_HAVE_LIBC_PTHREAD
CMAKE_HAVE_LIBC_PTHREAD:INTERNAL=
//Have library pthreads
CMAKE_HAVE_PTHREADS_CREATE:INTERNAL=
//Have library pthread
CMAKE_HAVE_PTHREAD_CREATE:INTERNAL=
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=W:/llvm/v15.0.1/src/llvm
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RUNSTATEDIR
CMAKE_INSTALL_RUNSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MT
CMAKE_MT-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=1294
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//noop for ranlib
CMAKE_RANLIB:INTERNAL=:
//ADVANCED property for variable: CMAKE_RC_COMPILER
CMAKE_RC_COMPILER-ADVANCED:INTERNAL=1
CMAKE_RC_COMPILER_WORKS:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS
CMAKE_RC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_DEBUG
CMAKE_RC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_MINSIZEREL
CMAKE_RC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELEASE
CMAKE_RC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RC_FLAGS_RELWITHDEBINFO
CMAKE_RC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=D:/tools/msvs/msvs.2022/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.24
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_TOOLCHAIN_FILE
CMAKE_TOOLCHAIN_FILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Result of TRY_COMPILE
COMPILE_HAVE_GNU_POSIX_REGEX:INTERNAL=FALSE
//Result of TRY_COMPILE
COMPILE_HAVE_POSIX_REGEX:INTERNAL=FALSE
//Result of TRY_COMPILE
COMPILE_HAVE_STEADY_CLOCK:INTERNAL=TRUE
//ADVANCED property for variable: CPACK_BINARY_7Z
CPACK_BINARY_7Z-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_IFW
CPACK_BINARY_IFW-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_NSIS
CPACK_BINARY_NSIS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_NUGET
CPACK_BINARY_NUGET-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_WIX
CPACK_BINARY_WIX-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_BINARY_ZIP
CPACK_BINARY_ZIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_7Z
CPACK_SOURCE_7Z-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CPACK_SOURCE_ZIP
CPACK_SOURCE_ZIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_64_BIT_DEVICE_CODE
CUDA_64_BIT_DEVICE_CODE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE
CUDA_ATTACH_VS_BUILD_RULE_TO_CUDA_FILE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_BUILD_CUBIN
CUDA_BUILD_CUBIN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_BUILD_EMULATION
CUDA_BUILD_EMULATION-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_CUDART_LIBRARY
CUDA_CUDART_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_CUDA_LIBRARY
CUDA_CUDA_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_GENERATED_OUTPUT_DIR
CUDA_GENERATED_OUTPUT_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_HOST_COMPILATION_CPP
CUDA_HOST_COMPILATION_CPP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_NVCC_EXECUTABLE
CUDA_NVCC_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_NVCC_FLAGS
CUDA_NVCC_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_NVCC_FLAGS_DEBUG
CUDA_NVCC_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_NVCC_FLAGS_MINSIZEREL
CUDA_NVCC_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_NVCC_FLAGS_RELEASE
CUDA_NVCC_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_NVCC_FLAGS_RELWITHDEBINFO
CUDA_NVCC_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_PROPAGATE_HOST_FLAGS
CUDA_PROPAGATE_HOST_FLAGS-ADVANCED:INTERNAL=1
//This is the value of the last time CUDA_SDK_ROOT_DIR was set
// successfully.
CUDA_SDK_ROOT_DIR_INTERNAL:INTERNAL=CUDA_SDK_ROOT_DIR-NOTFOUND
//ADVANCED property for variable: CUDA_SEPARABLE_COMPILATION
CUDA_SEPARABLE_COMPILATION-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_TOOLKIT_INCLUDE
CUDA_TOOLKIT_INCLUDE-ADVANCED:INTERNAL=1
//This is the value of the last time CUDA_TOOLKIT_ROOT_DIR was
// set successfully.
CUDA_TOOLKIT_ROOT_DIR_INTERNAL:INTERNAL=
//This is the value of the last time CUDA_TOOLKIT_TARGET_DIR was
// set successfully.
CUDA_TOOLKIT_TARGET_DIR_INTERNAL:INTERNAL=
CUDA_USE_STATIC_CUDA_RUNTIME:INTERNAL=OFF
//ADVANCED property for variable: CUDA_VERBOSE_BUILD
CUDA_VERBOSE_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_cublas_LIBRARY
CUDA_cublas_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_cublasemu_LIBRARY
CUDA_cublasemu_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_cufft_LIBRARY
CUDA_cufft_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CUDA_cufftemu_LIBRARY
CUDA_cufftemu_LIBRARY-ADVANCED:INTERNAL=1
//Location of make2cmake.cmake
CUDA_make2cmake:INTERNAL=D:/tools/msvs/msvs.2022/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.24/Modules/FindCUDA/make2cmake.cmake
//Location of parse_cubin.cmake
CUDA_parse_cubin:INTERNAL=D:/tools/msvs/msvs.2022/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.24/Modules/FindCUDA/parse_cubin.cmake
//Location of run_nvcc.cmake
CUDA_run_nvcc:INTERNAL=D:/tools/msvs/msvs.2022/Common7/IDE/CommonExtensions/Microsoft/CMake/CMake/share/cmake-3.24/Modules/FindCUDA/run_nvcc.cmake
//ADVANCED property for variable: CURSES_CURSES_LIBRARY
CURSES_CURSES_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CURSES_FORM_LIBRARY
CURSES_FORM_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CURSES_INCLUDE_PATH
CURSES_INCLUDE_PATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CURSES_NCURSES_LIBRARY
CURSES_NCURSES_LIBRARY-ADVANCED:INTERNAL=1
//Test CXX_SUPPORTS_DEPRECATED_DECLARATIONS
CXX_SUPPORTS_DEPRECATED_DECLARATIONS:INTERNAL=
//Test CXX_SUPPORTS_DEPRECATED_REGISTER
CXX_SUPPORTS_DEPRECATED_REGISTER:INTERNAL=
//Test CXX_SUPPORTS_NO_DEPRECATED_COPY_FLAG
CXX_SUPPORTS_NO_DEPRECATED_COPY_FLAG:INTERNAL=
//Test CXX_SUPPORTS_NO_STRING_CONVERSION_FLAG
CXX_SUPPORTS_NO_STRING_CONVERSION_FLAG:INTERNAL=
//Test CXX_SUPPORTS_STRICT_ALIASING
CXX_SUPPORTS_STRICT_ALIASING:INTERNAL=
//Test CXX_SUPPORTS_STRINGOP_TRUNCATION
CXX_SUPPORTS_STRINGOP_TRUNCATION:INTERNAL=
//Test CXX_SUPPORTS_UNKNOWN_PRAGMAS
CXX_SUPPORTS_UNKNOWN_PRAGMAS:INTERNAL=
//Test CXX_SUPPORTS_VLA_EXTENSION
CXX_SUPPORTS_VLA_EXTENSION:INTERNAL=
//Test CXX_SUPPORTS_WERROR_GLOBAL_CONSTRUCTOR
CXX_SUPPORTS_WERROR_GLOBAL_CONSTRUCTOR:INTERNAL=
//ADVANCED property for variable: CYGWIN_BAT
CYGWIN_BAT-ADVANCED:INTERNAL=1
//Test C_SUPPORTS_WERROR_GLOBAL_CONSTRUCTOR
C_SUPPORTS_WERROR_GLOBAL_CONSTRUCTOR:INTERNAL=
//Test C_SUPPORTS_WERROR_IMPLICIT_FUNCTION_DECLARATION
C_SUPPORTS_WERROR_IMPLICIT_FUNCTION_DECLARATION:INTERNAL=
//Test C_SUPPORTS_WERROR_MISMATCHED_TAGS
C_SUPPORTS_WERROR_MISMATCHED_TAGS:INTERNAL=
//Test C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW
C_SUPPORTS_WERROR_UNGUARDED_AVAILABILITY_NEW:INTERNAL=
//ADVANCED property for variable: DOXYGEN_DOT_EXECUTABLE
DOXYGEN_DOT_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: DOXYGEN_EXECUTABLE
DOXYGEN_EXECUTABLE-ADVANCED:INTERNAL=1
//Details about finding Doxygen
FIND_PACKAGE_MESSAGE_DETAILS_Doxygen:INTERNAL=[B:/tools/doxygen/bin/doxygen.exe][cfound components: doxygen missing components: dot][v1.9.5 (2f6875a5ca481a69a6f32650c77a667f87d25e88)()]
//Details about finding Git
FIND_PACKAGE_MESSAGE_DETAILS_Git:INTERNAL=[B:/tools/gfw/bin/git.exe][v2.37.3.windows.1()]
//Details about finding LibLZMA
FIND_PACKAGE_MESSAGE_DETAILS_LibLZMA:INTERNAL=[optimized;D:/env/sdks/vcpkg/installed/x64-windows/lib/lzma.lib;debug;D:/env/sdks/vcpkg/installed/x64-windows/debug/lib/lzma.lib][D:/env/sdks/vcpkg/installed/x64-windows/include][1][1][1][v5.2.5()]
//Details about finding LibXml2
FIND_PACKAGE_MESSAGE_DETAILS_LibXml2:INTERNAL=[D:/env/sdks/vcpkg/installed/x64-windows/lib/libxml2.lib][D:/env/sdks/vcpkg/installed/x64-windows/include/libxml2;D:/env/sdks/vcpkg/installed/x64-windows/include][v2.9.14(2.8)]
//Details about finding Perl
FIND_PACKAGE_MESSAGE_DETAILS_Perl:INTERNAL=[F:/sdks/perl/perl/bin/perl.exe][v5.32.1()]
//Details about finding Python3
FIND_PACKAGE_MESSAGE_DETAILS_Python3:INTERNAL=[B:/tools/python/python.exe][cfound components: Interpreter ][v3.11.0(3.6)]
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//Details about finding Z3
FIND_PACKAGE_MESSAGE_DETAILS_Z3:INTERNAL=[D:/env/sdks/vcpkg/installed/x64-windows/lib/libz3.lib][D:/env/sdks/vcpkg/installed/x64-windows/include][v4.8.16(4.7.1)]
//Details about finding ZLIB
FIND_PACKAGE_MESSAGE_DETAILS_ZLIB:INTERNAL=[optimized;D:/env/sdks/vcpkg/installed/x64-windows/lib/zlib.lib;debug;D:/env/sdks/vcpkg/installed/x64-windows/debug/lib/zlibd.lib][D:/env/sdks/vcpkg/installed/x64-windows/include][v1.2.12(1)]
//ADVANCED property for variable: FLANG_EXECUTABLE_VERSION
FLANG_EXECUTABLE_VERSION-ADVANCED:INTERNAL=1
//ADVANCED property for variable: FLANG_TOOLS_INSTALL_DIR
FLANG_TOOLS_INSTALL_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: GIT_EXECUTABLE
GIT_EXECUTABLE-ADVANCED:INTERNAL=1
//Test HAS_ATTRIBUTE_WARN_UNUSED_RESULT
HAS_ATTRIBUTE_WARN_UNUSED_RESULT:INTERNAL=
//Test HAS_WERROR_GLOBAL_CTORS
HAS_WERROR_GLOBAL_CTORS:INTERNAL=
//Have symbol accept4
HAVE_ACCEPT4:INTERNAL=
//Have include CrashReporterClient.h
HAVE_CRASHREPORTERCLIENT_H:INTERNAL=
//Have symbol curl_easy_init
HAVE_CURL:INTERNAL=1
//Test HAVE_CXX_FLAG_EHA_
HAVE_CXX_FLAG_EHA_:INTERNAL=1
//Test HAVE_CXX_FLAG_EHS_
HAVE_CXX_FLAG_EHS_:INTERNAL=1
//Have symbol arc4random
HAVE_DECL_ARC4RANDOM:INTERNAL=
//Have symbol FE_ALL_EXCEPT
HAVE_DECL_FE_ALL_EXCEPT:INTERNAL=1
//Have symbol FE_INEXACT
HAVE_DECL_FE_INEXACT:INTERNAL=1
//Test HAVE_DECL_FFS
HAVE_DECL_FFS:INTERNAL=
//Test HAVE_DECL_SNPRINTF
HAVE_DECL_SNPRINTF:INTERNAL=1
//Test HAVE_DECL_STRCASECMP
HAVE_DECL_STRCASECMP:INTERNAL=
//Have symbol strerror_s
HAVE_DECL_STRERROR_S:INTERNAL=1
//Test HAVE_DECL_STRNCASECMP
HAVE_DECL_STRNCASECMP:INTERNAL=
//Test HAVE_DECL__BITSCANFORWARD
HAVE_DECL__BITSCANFORWARD:INTERNAL=1
//Test HAVE_DECL__SNPRINTF
HAVE_DECL__SNPRINTF:INTERNAL=1
//Test HAVE_DECL__STRICMP
HAVE_DECL__STRICMP:INTERNAL=1
//Test HAVE_DECL__STRNICMP
HAVE_DECL__STRNICMP:INTERNAL=1
//Test HAVE_DECL___BUILTIN_FFS
HAVE_DECL___BUILTIN_FFS:INTERNAL=
//Have symbol __deregister_frame
HAVE_DEREGISTER_FRAME:INTERNAL=
//Have include dlfcn.h
HAVE_DLFCN_H:INTERNAL=
//Have include errno.h
HAVE_ERRNO_H:INTERNAL=1
//Have include fcntl.h
HAVE_FCNTL_H:INTERNAL=1
//Have include fenv.h
HAVE_FENV_H:INTERNAL=1
//Have symbol futimens
HAVE_FUTIMENS:INTERNAL=
//Have symbol futimes
HAVE_FUTIMES:INTERNAL=
//Have symbol getpagesize
HAVE_GETPAGESIZE:INTERNAL=
//Have symbol getrlimit
HAVE_GETRLIMIT:INTERNAL=
//Have symbol getrusage
HAVE_GETRUSAGE:INTERNAL=
//Test HAVE_INTTYPES_H
HAVE_INTTYPES_H:INTERNAL=1
//Have symbol isatty
HAVE_ISATTY:INTERNAL=
//Have library compression
HAVE_LIBCOMPRESSION:INTERNAL=
//Have library pfm
HAVE_LIBPFM_INITIALIZE:INTERNAL=
//Have symbol xmlReadMemory
HAVE_LIBXML2:INTERNAL=1
//Have library rt
HAVE_LIB_RT:INTERNAL=
//Have include link.h
HAVE_LINK_H:INTERNAL=
//Have symbol lseek64
HAVE_LSEEK64:INTERNAL=
//Have include mach/mach.h
HAVE_MACH_MACH_H:INTERNAL=
//Have symbol mallctl
HAVE_MALLCTL:INTERNAL=
//Have symbol mallinfo
HAVE_MALLINFO:INTERNAL=
//Have symbol mallinfo2
HAVE_MALLINFO2:INTERNAL=
//Have include malloc/malloc.h
HAVE_MALLOC_MALLOC_H:INTERNAL=
//Have symbol malloc_zone_statistics
HAVE_MALLOC_ZONE_STATISTICS:INTERNAL=
//Have symbol __NR_process_vm_readv
HAVE_NR_PROCESS_VM_READV:INTERNAL=
//Have symbol posix_spawn
HAVE_POSIX_SPAWN:INTERNAL=
//Have symbol ppoll
HAVE_PPOLL:INTERNAL=
//Have symbol pread
HAVE_PREAD:INTERNAL=
//Have symbol process_vm_readv
HAVE_PROCESS_VM_READV:INTERNAL=
//Have symbol proc_pid_rusage
HAVE_PROC_PID_RUSAGE:INTERNAL=
//Have symbol ptsname_r
HAVE_PTSNAME_R:INTERNAL=
//Have symbol __register_frame
HAVE_REGISTER_FRAME:INTERNAL=
//Have symbol sbrk
HAVE_SBRK:INTERNAL=
//Have symbol setenv
HAVE_SETENV:INTERNAL=
//Have symbol setrlimit
HAVE_SETRLIMIT:INTERNAL=
//Have symbol sigaltstack
HAVE_SIGALTSTACK:INTERNAL=
//Have include signal.h
HAVE_SIGNAL_H:INTERNAL=1
//Test HAVE_STDINT_H
HAVE_STDINT_H:INTERNAL=1
//Test HAVE_STD_IS_TRIVIALLY_COPYABLE
HAVE_STD_IS_TRIVIALLY_COPYABLE:INTERNAL=1
//Have symbol strerror
HAVE_STRERROR:INTERNAL=1
//Have symbol strerror_r
HAVE_STRERROR_R:INTERNAL=
//Test HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC
HAVE_STRUCT_STAT_ST_MTIMESPEC_TV_NSEC:INTERNAL=
//Test HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC
HAVE_STRUCT_STAT_ST_MTIM_TV_NSEC:INTERNAL=
//Have symbol sysconf
HAVE_SYSCONF:INTERNAL=
//Have include sysexits.h
HAVE_SYSEXITS_H:INTERNAL=
//Have includes sys/types.h;sys/event.h
HAVE_SYS_EVENT_H:INTERNAL=
//Test HAVE_SYS_INTTYPES_H
HAVE_SYS_INTTYPES_H:INTERNAL=
//Have include sys/ioctl.h
HAVE_SYS_IOCTL_H:INTERNAL=
//Have include sys/mman.h
HAVE_SYS_MMAN_H:INTERNAL=
//Have include sys/param.h
HAVE_SYS_PARAM_H:INTERNAL=
//Have include sys/resource.h
HAVE_SYS_RESOURCE_H:INTERNAL=
//Have include sys/stat.h
HAVE_SYS_STAT_H:INTERNAL=1
//Have include sys/time.h
HAVE_SYS_TIME_H:INTERNAL=
//Have include sys/types.h
HAVE_SYS_TYPES_H:INTERNAL=1
//Have include termios.h
HAVE_TERMIOS_H:INTERNAL=
//Test HAVE_UINT8T
HAVE_UINT8T:INTERNAL=
//Have include unistd.h
HAVE_UNISTD_H:INTERNAL=
//Have symbol __unw_add_dynamic_fde
HAVE_UNW_ADD_DYNAMIC_FDE:INTERNAL=
//Have include valgrind/valgrind.h
HAVE_VALGRIND_VALGRIND_H:INTERNAL=
//Have symbol compress2
HAVE_ZLIB:INTERNAL=1
//Have function _alloca
HAVE__ALLOCA:INTERNAL=
//Have symbol _chsize_s
HAVE__CHSIZE_S:INTERNAL=1
//Have symbol _Unwind_Backtrace
HAVE__UNWIND_BACKTRACE:INTERNAL=
//Have function __alloca
HAVE___ALLOCA:INTERNAL=
//Have function __ashldi3
HAVE___ASHLDI3:INTERNAL=
//Have function __ashrdi3
HAVE___ASHRDI3:INTERNAL=
//Test HAVE___ATTRIBUTE__
HAVE___ATTRIBUTE__:INTERNAL=
//Have function __chkstk
HAVE___CHKSTK:INTERNAL=1
//Have function __chkstk_ms
HAVE___CHKSTK_MS:INTERNAL=
//Have function __cmpdi2
HAVE___CMPDI2:INTERNAL=
//Have function __divdi3
HAVE___DIVDI3:INTERNAL=
//Have function __fixdfdi
HAVE___FIXDFDI:INTERNAL=
//Have function __fixsfdi
HAVE___FIXSFDI:INTERNAL=
//Have function __floatdidf
HAVE___FLOATDIDF:INTERNAL=
//Have function __lshrdi3
HAVE___LSHRDI3:INTERNAL=
//Have function __main
HAVE___MAIN:INTERNAL=
//Have function __moddi3
HAVE___MODDI3:INTERNAL=
//Have function __udivdi3
HAVE___UDIVDI3:INTERNAL=
//Have function __umoddi3
HAVE___UMODDI3:INTERNAL=
//Have function ___chkstk
HAVE____CHKSTK:INTERNAL=
//Have function ___chkstk_ms
HAVE____CHKSTK_MS:INTERNAL=
//Have symbol _M_X64
IS_X64:INTERNAL=1
//ADVANCED property for variable: LIBCLANG_LIBRARY_VERSION
LIBCLANG_LIBRARY_VERSION-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LIBFLANG_LIBRARY_VERSION
LIBFLANG_LIBRARY_VERSION-ADVANCED:INTERNAL=1
LIBLZMA_HAS_AUTO_DECODER:INTERNAL=1
LIBLZMA_HAS_EASY_ENCODER:INTERNAL=1
LIBLZMA_HAS_LZMA_PRESET:INTERNAL=1
//ADVANCED property for variable: LIBLZMA_INCLUDE_DIR
LIBLZMA_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LIBLZMA_LIBRARY_DEBUG
LIBLZMA_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LIBLZMA_LIBRARY_RELEASE
LIBLZMA_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
//Have symbol aligned_alloc
LIBOMP_HAVE_ALIGNED_ALLOC:INTERNAL=
//Test LIBOMP_HAVE_ARCH_SSE2_FLAG
LIBOMP_HAVE_ARCH_SSE2_FLAG:INTERNAL=
//Test LIBOMP_HAVE_ATTRIBUTE_RTM
LIBOMP_HAVE_ATTRIBUTE_RTM:INTERNAL=
//Test LIBOMP_HAVE_ATTRIBUTE_WAITPKG
LIBOMP_HAVE_ATTRIBUTE_WAITPKG:INTERNAL=
//Have function __atomic_load_1
LIBOMP_HAVE_BUILTIN_ATOMIC:INTERNAL=
//Test LIBOMP_HAVE_EHSC_FLAG
LIBOMP_HAVE_EHSC_FLAG:INTERNAL=1
//Test LIBOMP_HAVE_FNO_EXCEPTIONS_FLAG
LIBOMP_HAVE_FNO_EXCEPTIONS_FLAG:INTERNAL=
//Test LIBOMP_HAVE_FNO_RTTI_FLAG
LIBOMP_HAVE_FNO_RTTI_FLAG:INTERNAL=
//Test LIBOMP_HAVE_FTLS_MODEL_FLAG
LIBOMP_HAVE_FTLS_MODEL_FLAG:INTERNAL=
//Test LIBOMP_HAVE_GS_FLAG
LIBOMP_HAVE_GS_FLAG:INTERNAL=1
//Have include immintrin.h
LIBOMP_HAVE_IMMINTRIN_H:INTERNAL=1
//Have library atomic
LIBOMP_HAVE_LIBATOMIC:INTERNAL=
//Have library m
LIBOMP_HAVE_LIBM:INTERNAL=
//Test LIBOMP_HAVE_M32_FLAG
LIBOMP_HAVE_M32_FLAG:INTERNAL=
//Test LIBOMP_HAVE_MMIC_FLAG
LIBOMP_HAVE_MMIC_FLAG:INTERNAL=
//Test LIBOMP_HAVE_MRTM_FLAG
LIBOMP_HAVE_MRTM_FLAG:INTERNAL=
//Test LIBOMP_HAVE_MSSE2_FLAG
LIBOMP_HAVE_MSSE2_FLAG:INTERNAL=
//Test LIBOMP_HAVE_Oy__FLAG
LIBOMP_HAVE_Oy__FLAG:INTERNAL=1
//Have symbol posix_memalign
LIBOMP_HAVE_POSIX_MEMALIGN:INTERNAL=
//Test LIBOMP_HAVE_PSAPI
LIBOMP_HAVE_PSAPI:INTERNAL=1
//Test LIBOMP_HAVE_QSAFESEH_FLAG
LIBOMP_HAVE_QSAFESEH_FLAG:INTERNAL=
//Test LIBOMP_HAVE_RTM_INTRINSICS
LIBOMP_HAVE_RTM_INTRINSICS:INTERNAL=1
//Test LIBOMP_HAVE_SAFESEH_FLAG
LIBOMP_HAVE_SAFESEH_FLAG:INTERNAL=
//Have symbol shm_open
LIBOMP_HAVE_SHM_OPEN_NO_LRT:INTERNAL=
//Have symbol shm_open
LIBOMP_HAVE_SHM_OPEN_WITH_LRT:INTERNAL=
//Test LIBOMP_HAVE_VERSION_SYMBOLS
LIBOMP_HAVE_VERSION_SYMBOLS:INTERNAL=
//Test LIBOMP_HAVE_WAITPKG_INTRINSICS
LIBOMP_HAVE_WAITPKG_INTRINSICS:INTERNAL=1
//Test LIBOMP_HAVE_WEAK_ATTRIBUTE
LIBOMP_HAVE_WEAK_ATTRIBUTE:INTERNAL=
//Test LIBOMP_HAVE_WNO_CAST_QUAL_FLAG
LIBOMP_HAVE_WNO_CAST_QUAL_FLAG:INTERNAL=
//Test LIBOMP_HAVE_WNO_CLASS_MEMACCESS_FLAG
LIBOMP_HAVE_WNO_CLASS_MEMACCESS_FLAG:INTERNAL=
//Test LIBOMP_HAVE_WNO_COVERED_SWITCH_DEFAULT_FLAG
LIBOMP_HAVE_WNO_COVERED_SWITCH_DEFAULT_FLAG:INTERNAL=
//Test LIBOMP_HAVE_WNO_FRAME_ADDRESS_FLAG
LIBOMP_HAVE_WNO_FRAME_ADDRESS_FLAG:INTERNAL=
//Test LIBOMP_HAVE_WNO_INT_TO_VOID_POINTER_CAST_FLAG
LIBOMP_HAVE_WNO_INT_TO_VOID_POINTER_CAST_FLAG:INTERNAL=
//Test LIBOMP_HAVE_WNO_RETURN_TYPE_C_LINKAGE_FLAG
LIBOMP_HAVE_WNO_RETURN_TYPE_C_LINKAGE_FLAG:INTERNAL=
//Test LIBOMP_HAVE_WNO_STRICT_ALIASING_FLAG
LIBOMP_HAVE_WNO_STRICT_ALIASING_FLAG:INTERNAL=
//Test LIBOMP_HAVE_WNO_STRINGOP_TRUNCATION_FLAG
LIBOMP_HAVE_WNO_STRINGOP_TRUNCATION_FLAG:INTERNAL=
//Test LIBOMP_HAVE_WNO_SWITCH_FLAG
LIBOMP_HAVE_WNO_SWITCH_FLAG:INTERNAL=
//Test LIBOMP_HAVE_WNO_UNINITIALIZED_FLAG
LIBOMP_HAVE_WNO_UNINITIALIZED_FLAG:INTERNAL=
//Test LIBOMP_HAVE_WNO_UNUSED_BUT_SET_VARIABLE_FLAG
LIBOMP_HAVE_WNO_UNUSED_BUT_SET_VARIABLE_FLAG:INTERNAL=
//Test LIBOMP_HAVE_WSTRINGOP_OVERFLOW_FLAG
LIBOMP_HAVE_WSTRINGOP_OVERFLOW_FLAG:INTERNAL=
//Have include xmmintrin.h
LIBOMP_HAVE_XMMINTRIN_H:INTERNAL=1
//Have symbol _aligned_malloc
LIBOMP_HAVE__ALIGNED_MALLOC:INTERNAL=1
//Test LIBOMP_HAVE__MM_MALLOC
LIBOMP_HAVE__MM_MALLOC:INTERNAL=1
//Test LIBOMP_HAVE___BUILTIN_FRAME_ADDRESS
LIBOMP_HAVE___BUILTIN_FRAME_ADDRESS:INTERNAL=
//ADVANCED property for variable: LIBXML2_INCLUDE_DIR
LIBXML2_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LIBXML2_LIBRARY
LIBXML2_LIBRARY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LIBXML2_XMLLINT_EXECUTABLE
LIBXML2_XMLLINT_EXECUTABLE-ADVANCED:INTERNAL=1
//STRING
LLDB_DOTEST_ARGS:INTERNAL=-u;CXXFLAGS;-u;CFLAGS
//ADVANCED property for variable: LLD_TOOLS_INSTALL_DIR
LLD_TOOLS_INSTALL_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_BUILD_INSTRUMENTED
LLVM_BUILD_INSTRUMENTED-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_BUILD_INSTRUMENTED_COVERAGE
LLVM_BUILD_INSTRUMENTED_COVERAGE-ADVANCED:INTERNAL=1
LLVM_CONFIG_HAS_RTTI:INTERNAL=NO
//ADVANCED property for variable: LLVM_ENABLE_IR_PGO
LLVM_ENABLE_IR_PGO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_ENABLE_PROJECTS_USED
LLVM_ENABLE_PROJECTS_USED-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_EXAMPLES_INSTALL_DIR
LLVM_EXAMPLES_INSTALL_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_EXTERNAL_PROJECT_BUILD_TOOL_ARGS
LLVM_EXTERNAL_PROJECT_BUILD_TOOL_ARGS-ADVANCED:INTERNAL=1
//Test LLVM_HAS_ATOMICS
LLVM_HAS_ATOMICS:INTERNAL=1
//Have library xar
LLVM_HAVE_LIBXAR:INTERNAL=
//ADVANCED property for variable: LLVM_INCLUDE_DXIL_TESTS
LLVM_INCLUDE_DXIL_TESTS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TARGET_TRIPLE_ENV
LLVM_TARGET_TRIPLE_ENV-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOLS_INSTALL_DIR
LLVM_TOOLS_INSTALL_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_BUGPOINT_BUILD
LLVM_TOOL_BUGPOINT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_BUGPOINT_PASSES_BUILD
LLVM_TOOL_BUGPOINT_PASSES_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_DSYMUTIL_BUILD
LLVM_TOOL_DSYMUTIL_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_DXIL_DIS_BUILD
LLVM_TOOL_DXIL_DIS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_GOLD_BUILD
LLVM_TOOL_GOLD_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLC_BUILD
LLVM_TOOL_LLC_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLI_BUILD
LLVM_TOOL_LLI_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_AR_BUILD
LLVM_TOOL_LLVM_AR_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_AS_BUILD
LLVM_TOOL_LLVM_AS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_AS_FUZZER_BUILD
LLVM_TOOL_LLVM_AS_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_BCANALYZER_BUILD
LLVM_TOOL_LLVM_BCANALYZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CAT_BUILD
LLVM_TOOL_LLVM_CAT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CFI_VERIFY_BUILD
LLVM_TOOL_LLVM_CFI_VERIFY_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CONFIG_BUILD
LLVM_TOOL_LLVM_CONFIG_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_COV_BUILD
LLVM_TOOL_LLVM_COV_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CVTRES_BUILD
LLVM_TOOL_LLVM_CVTRES_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CXXDUMP_BUILD
LLVM_TOOL_LLVM_CXXDUMP_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CXXFILT_BUILD
LLVM_TOOL_LLVM_CXXFILT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_CXXMAP_BUILD
LLVM_TOOL_LLVM_CXXMAP_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_C_TEST_BUILD
LLVM_TOOL_LLVM_C_TEST_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DEBUGINFOD_BUILD
LLVM_TOOL_LLVM_DEBUGINFOD_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DEBUGINFOD_FIND_BUILD
LLVM_TOOL_LLVM_DEBUGINFOD_FIND_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DIFF_BUILD
LLVM_TOOL_LLVM_DIFF_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DIS_BUILD
LLVM_TOOL_LLVM_DIS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DIS_FUZZER_BUILD
LLVM_TOOL_LLVM_DIS_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DLANG_DEMANGLE_FUZZER_BUILD
LLVM_TOOL_LLVM_DLANG_DEMANGLE_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DRIVER_BUILD
LLVM_TOOL_LLVM_DRIVER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DWARFDUMP_BUILD
LLVM_TOOL_LLVM_DWARFDUMP_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DWARFUTIL_BUILD
LLVM_TOOL_LLVM_DWARFUTIL_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_DWP_BUILD
LLVM_TOOL_LLVM_DWP_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_EXEGESIS_BUILD
LLVM_TOOL_LLVM_EXEGESIS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_EXTRACT_BUILD
LLVM_TOOL_LLVM_EXTRACT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_GO_BUILD
LLVM_TOOL_LLVM_GO_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_GSYMUTIL_BUILD
LLVM_TOOL_LLVM_GSYMUTIL_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_IFS_BUILD
LLVM_TOOL_LLVM_IFS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_ISEL_FUZZER_BUILD
LLVM_TOOL_LLVM_ISEL_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_ITANIUM_DEMANGLE_FUZZER_BUILD
LLVM_TOOL_LLVM_ITANIUM_DEMANGLE_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_JITLINK_BUILD
LLVM_TOOL_LLVM_JITLINK_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_JITLISTENER_BUILD
LLVM_TOOL_LLVM_JITLISTENER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_LIBTOOL_DARWIN_BUILD
LLVM_TOOL_LLVM_LIBTOOL_DARWIN_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_LINK_BUILD
LLVM_TOOL_LLVM_LINK_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_LIPO_BUILD
LLVM_TOOL_LLVM_LIPO_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_LTO2_BUILD
LLVM_TOOL_LLVM_LTO2_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_LTO_BUILD
LLVM_TOOL_LLVM_LTO_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MCA_BUILD
LLVM_TOOL_LLVM_MCA_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MC_ASSEMBLE_FUZZER_BUILD
LLVM_TOOL_LLVM_MC_ASSEMBLE_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MC_BUILD
LLVM_TOOL_LLVM_MC_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MC_DISASSEMBLE_FUZZER_BUILD
LLVM_TOOL_LLVM_MC_DISASSEMBLE_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MICROSOFT_DEMANGLE_FUZZER_BUILD
LLVM_TOOL_LLVM_MICROSOFT_DEMANGLE_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_ML_BUILD
LLVM_TOOL_LLVM_ML_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MODEXTRACT_BUILD
LLVM_TOOL_LLVM_MODEXTRACT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_MT_BUILD
LLVM_TOOL_LLVM_MT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_NM_BUILD
LLVM_TOOL_LLVM_NM_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_OBJCOPY_BUILD
LLVM_TOOL_LLVM_OBJCOPY_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_OBJDUMP_BUILD
LLVM_TOOL_LLVM_OBJDUMP_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_OPT_FUZZER_BUILD
LLVM_TOOL_LLVM_OPT_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_OPT_REPORT_BUILD
LLVM_TOOL_LLVM_OPT_REPORT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_PDBUTIL_BUILD
LLVM_TOOL_LLVM_PDBUTIL_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_PROFDATA_BUILD
LLVM_TOOL_LLVM_PROFDATA_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_PROFGEN_BUILD
LLVM_TOOL_LLVM_PROFGEN_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_RC_BUILD
LLVM_TOOL_LLVM_RC_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_READOBJ_BUILD
LLVM_TOOL_LLVM_READOBJ_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_REDUCE_BUILD
LLVM_TOOL_LLVM_REDUCE_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_REMARK_SIZE_DIFF_BUILD
LLVM_TOOL_LLVM_REMARK_SIZE_DIFF_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_RTDYLD_BUILD
LLVM_TOOL_LLVM_RTDYLD_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_RUST_DEMANGLE_FUZZER_BUILD
LLVM_TOOL_LLVM_RUST_DEMANGLE_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_SHLIB_BUILD
LLVM_TOOL_LLVM_SHLIB_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_SIM_BUILD
LLVM_TOOL_LLVM_SIM_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_SIZE_BUILD
LLVM_TOOL_LLVM_SIZE_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_SPECIAL_CASE_LIST_FUZZER_BUILD
LLVM_TOOL_LLVM_SPECIAL_CASE_LIST_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_SPLIT_BUILD
LLVM_TOOL_LLVM_SPLIT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_STRESS_BUILD
LLVM_TOOL_LLVM_STRESS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_STRINGS_BUILD
LLVM_TOOL_LLVM_STRINGS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_SYMBOLIZER_BUILD
LLVM_TOOL_LLVM_SYMBOLIZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_TAPI_DIFF_BUILD
LLVM_TOOL_LLVM_TAPI_DIFF_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_TLI_CHECKER_BUILD
LLVM_TOOL_LLVM_TLI_CHECKER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_UNDNAME_BUILD
LLVM_TOOL_LLVM_UNDNAME_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_XRAY_BUILD
LLVM_TOOL_LLVM_XRAY_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_YAML_NUMERIC_PARSER_FUZZER_BUILD
LLVM_TOOL_LLVM_YAML_NUMERIC_PARSER_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LLVM_YAML_PARSER_FUZZER_BUILD
LLVM_TOOL_LLVM_YAML_PARSER_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_LTO_BUILD
LLVM_TOOL_LTO_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_OBJ2YAML_BUILD
LLVM_TOOL_OBJ2YAML_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_OPT_BUILD
LLVM_TOOL_OPT_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_OPT_VIEWER_BUILD
LLVM_TOOL_OPT_VIEWER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_REMARKS_SHLIB_BUILD
LLVM_TOOL_REMARKS_SHLIB_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_SANCOV_BUILD
LLVM_TOOL_SANCOV_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_SANSTATS_BUILD
LLVM_TOOL_SANSTATS_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_SPLIT_FILE_BUILD
LLVM_TOOL_SPLIT_FILE_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_VERIFY_USELISTORDER_BUILD
LLVM_TOOL_VERIFY_USELISTORDER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_VFABI_DEMANGLE_FUZZER_BUILD
LLVM_TOOL_VFABI_DEMANGLE_FUZZER_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_XCODE_TOOLCHAIN_BUILD
LLVM_TOOL_XCODE_TOOLCHAIN_BUILD-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_TOOL_YAML2OBJ_BUILD
LLVM_TOOL_YAML2OBJ_BUILD-ADVANCED:INTERNAL=1
//STRINGS property for variable: LLVM_USE_CRT_RELEASE
LLVM_USE_CRT_RELEASE-STRINGS:INTERNAL=MD;MDd;MT;MTd
//Have symbol __GLIBC__
LLVM_USING_GLIBC:INTERNAL=
//ADVANCED property for variable: LLVM_UTILS_INSTALL_DIR
LLVM_UTILS_INSTALL_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LLVM_VP_COUNTERS_PER_SITE
LLVM_VP_COUNTERS_PER_SITE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LibEdit_INCLUDE_DIRS
LibEdit_INCLUDE_DIRS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: LibEdit_LIBRARIES
LibEdit_LIBRARIES-ADVANCED:INTERNAL=1
//ADVANCED property for variable: MLIR_TOOLS_INSTALL_DIR
MLIR_TOOLS_INSTALL_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: MSYS_CMD
MSYS_CMD-ADVANCED:INTERNAL=1
NCURSES_CFLAGS:INTERNAL=
NCURSES_CFLAGS_I:INTERNAL=
NCURSES_CFLAGS_OTHER:INTERNAL=
NCURSES_FOUND:INTERNAL=
NCURSES_INCLUDEDIR:INTERNAL=
NCURSES_LIBDIR:INTERNAL=
NCURSES_LIBS:INTERNAL=
NCURSES_LIBS_L:INTERNAL=
NCURSES_LIBS_OTHER:INTERNAL=
NCURSES_LIBS_PATHS:INTERNAL=
NCURSES_MODULE_NAME:INTERNAL=
NCURSES_PREFIX:INTERNAL=
NCURSES_STATIC_CFLAGS:INTERNAL=
NCURSES_STATIC_CFLAGS_I:INTERNAL=
NCURSES_STATIC_CFLAGS_OTHER:INTERNAL=
NCURSES_STATIC_LIBDIR:INTERNAL=
NCURSES_STATIC_LIBS:INTERNAL=
NCURSES_STATIC_LIBS_L:INTERNAL=
NCURSES_STATIC_LIBS_OTHER:INTERNAL=
NCURSES_STATIC_LIBS_PATHS:INTERNAL=
NCURSES_VERSION:INTERNAL=
NCURSES_ncurses_INCLUDEDIR:INTERNAL=
NCURSES_ncurses_LIBDIR:INTERNAL=
NCURSES_ncurses_PREFIX:INTERNAL=
NCURSES_ncurses_VERSION:INTERNAL=
//ADVANCED property for variable: OCAMLFIND
OCAMLFIND-ADVANCED:INTERNAL=1
//Test OPENMP_HAVE_STD_CPP14_FLAG
OPENMP_HAVE_STD_CPP14_FLAG:INTERNAL=
//Test OPENMP_HAVE_WALL_FLAG
OPENMP_HAVE_WALL_FLAG:INTERNAL=1
//Test OPENMP_HAVE_WCAST_QUAL_FLAG
OPENMP_HAVE_WCAST_QUAL_FLAG:INTERNAL=
//Test OPENMP_HAVE_WERROR_FLAG
OPENMP_HAVE_WERROR_FLAG:INTERNAL=
//Test OPENMP_HAVE_WFORMAT_PEDANTIC_FLAG
OPENMP_HAVE_WFORMAT_PEDANTIC_FLAG:INTERNAL=
//Test OPENMP_HAVE_WIMPLICIT_FALLTHROUGH_FLAG
OPENMP_HAVE_WIMPLICIT_FALLTHROUGH_FLAG:INTERNAL=
//Test OPENMP_HAVE_WNO_EXTRA_FLAG
OPENMP_HAVE_WNO_EXTRA_FLAG:INTERNAL=
//Test OPENMP_HAVE_WNO_MAYBE_UNINITIALIZED_FLAG
OPENMP_HAVE_WNO_MAYBE_UNINITIALIZED_FLAG:INTERNAL=
//Test OPENMP_HAVE_WNO_PEDANTIC_FLAG
OPENMP_HAVE_WNO_PEDANTIC_FLAG:INTERNAL=
//Test OPENMP_HAVE_WSIGN_COMPARE_FLAG
OPENMP_HAVE_WSIGN_COMPARE_FLAG:INTERNAL=
PC_LIBEDIT_CFLAGS:INTERNAL=
PC_LIBEDIT_CFLAGS_I:INTERNAL=
PC_LIBEDIT_CFLAGS_OTHER:INTERNAL=
PC_LIBEDIT_FOUND:INTERNAL=
PC_LIBEDIT_INCLUDEDIR:INTERNAL=
PC_LIBEDIT_LIBDIR:INTERNAL=
PC_LIBEDIT_LIBS:INTERNAL=
PC_LIBEDIT_LIBS_L:INTERNAL=
PC_LIBEDIT_LIBS_OTHER:INTERNAL=
PC_LIBEDIT_LIBS_PATHS:INTERNAL=
PC_LIBEDIT_MODULE_NAME:INTERNAL=
PC_LIBEDIT_PREFIX:INTERNAL=
PC_LIBEDIT_STATIC_CFLAGS:INTERNAL=
PC_LIBEDIT_STATIC_CFLAGS_I:INTERNAL=
PC_LIBEDIT_STATIC_CFLAGS_OTHER:INTERNAL=
PC_LIBEDIT_STATIC_LIBDIR:INTERNAL=
PC_LIBEDIT_STATIC_LIBS:INTERNAL=
PC_LIBEDIT_STATIC_LIBS_L:INTERNAL=
PC_LIBEDIT_STATIC_LIBS_OTHER:INTERNAL=
PC_LIBEDIT_STATIC_LIBS_PATHS:INTERNAL=
PC_LIBEDIT_VERSION:INTERNAL=
PC_LIBEDIT_libedit_INCLUDEDIR:INTERNAL=
PC_LIBEDIT_libedit_LIBDIR:INTERNAL=
PC_LIBEDIT_libedit_PREFIX:INTERNAL=
PC_LIBEDIT_libedit_VERSION:INTERNAL=
PC_LIBXML_CFLAGS:INTERNAL=-ID:/env/sdks/vcpkg/installed/x64-windows/include/libxml2;-ID:/env/sdks/vcpkg/installed/x64-windows/include
PC_LIBXML_CFLAGS_I:INTERNAL=
PC_LIBXML_CFLAGS_OTHER:INTERNAL=
PC_LIBXML_FOUND:INTERNAL=1
PC_LIBXML_INCLUDEDIR:INTERNAL=D:/env/sdks/vcpkg/installed/x64-windows/include
PC_LIBXML_INCLUDE_DIRS:INTERNAL=D:/env/sdks/vcpkg/installed/x64-windows/include/libxml2;D:/env/sdks/vcpkg/installed/x64-windows/include
PC_LIBXML_LDFLAGS:INTERNAL=-LD:/env/sdks/vcpkg/installed/x64-windows/lib;-llibxml2;-LD:/env/sdks/vcpkg/installed/x64-windows/lib;-LD:/env/sdks/vcpkg/installed/x64-windows/lib;-lzlib;-llzma
PC_LIBXML_LDFLAGS_OTHER:INTERNAL=
PC_LIBXML_LIBDIR:INTERNAL=D:/env/sdks/vcpkg/installed/x64-windows/lib
PC_LIBXML_LIBRARIES:INTERNAL=libxml2;zlib;lzma
PC_LIBXML_LIBRARY_DIRS:INTERNAL=D:/env/sdks/vcpkg/installed/x64-windows/lib;D:/env/sdks/vcpkg/installed/x64-windows/lib;D:/env/sdks/vcpkg/installed/x64-windows/lib
PC_LIBXML_LIBS:INTERNAL=
PC_LIBXML_LIBS_L:INTERNAL=
PC_LIBXML_LIBS_OTHER:INTERNAL=
PC_LIBXML_LIBS_PATHS:INTERNAL=
PC_LIBXML_MODULE_NAME:INTERNAL=libxml-2.0
PC_LIBXML_PREFIX:INTERNAL=D:/env/sdks/vcpkg/installed/x64-windows
PC_LIBXML_STATIC_CFLAGS:INTERNAL=-ID:/env/sdks/vcpkg/installed/x64-windows/include/libxml2;-ID:/env/sdks/vcpkg/installed/x64-windows/include
PC_LIBXML_STATIC_CFLAGS_I:INTERNAL=
PC_LIBXML_STATIC_CFLAGS_OTHER:INTERNAL=
PC_LIBXML_STATIC_INCLUDE_DIRS:INTERNAL=D:/env/sdks/vcpkg/installed/x64-windows/include/libxml2;D:/env/sdks/vcpkg/installed/x64-windows/include
PC_LIBXML_STATIC_LDFLAGS:INTERNAL=-LD:/env/sdks/vcpkg/installed/x64-windows/lib;-llibxml2;-LD:/env/sdks/vcpkg/installed/x64-windows/lib;-LD:/env/sdks/vcpkg/installed/x64-windows/lib;-lzlib;-llzma
PC_LIBXML_STATIC_LDFLAGS_OTHER:INTERNAL=
PC_LIBXML_STATIC_LIBDIR:INTERNAL=
PC_LIBXML_STATIC_LIBRARIES:INTERNAL=libxml2;zlib;lzma
PC_LIBXML_STATIC_LIBRARY_DIRS:INTERNAL=D:/env/sdks/vcpkg/installed/x64-windows/lib;D:/env/sdks/vcpkg/installed/x64-windows/lib;D:/env/sdks/vcpkg/installed/x64-windows/lib
PC_LIBXML_STATIC_LIBS:INTERNAL=
PC_LIBXML_STATIC_LIBS_L:INTERNAL=
PC_LIBXML_STATIC_LIBS_OTHER:INTERNAL=
PC_LIBXML_STATIC_LIBS_PATHS:INTERNAL=
PC_LIBXML_VERSION:INTERNAL=2.9.14
PC_LIBXML_libxml-2.0_INCLUDEDIR:INTERNAL=
PC_LIBXML_libxml-2.0_LIBDIR:INTERNAL=
PC_LIBXML_libxml-2.0_PREFIX:INTERNAL=
PC_LIBXML_libxml-2.0_VERSION:INTERNAL=
//ADVANCED property for variable: PERL_EXECUTABLE
PERL_EXECUTABLE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_ARGN
PKG_CONFIG_ARGN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
//Result of try_run()
RUN_HAVE_STEADY_CLOCK:INTERNAL=0
//Test SUPPORTS_GNU_ZERO_VARIADIC_MACRO_ARGUMENTS_FLAG
SUPPORTS_GNU_ZERO_VARIADIC_MACRO_ARGUMENTS_FLAG:INTERNAL=
//Test SUPPORTS_VARIADIC_MACROS_FLAG
SUPPORTS_VARIADIC_MACROS_FLAG:INTERNAL=
//ADVANCED property for variable: SWIG_EXECUTABLE
SWIG_EXECUTABLE-ADVANCED:INTERNAL=1
//Install the dependencies listed in your manifest:
//\n    If this is off, you will have to manually install your dependencies.
//\n    See https://github.com/microsoft/vcpkg/tree/master/docs/specifications/manifests.md
// for more info.
//\n
VCPKG_MANIFEST_INSTALL:INTERNAL=OFF
//ADVANCED property for variable: VCPKG_VERBOSE
VCPKG_VERBOSE-ADVANCED:INTERNAL=1
//Result of TRY_COMPILE
Z3_COMPILED:INTERNAL=TRUE
//ADVANCED property for variable: Z3_INCLUDE_DIR
Z3_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: Z3_LIBRARIES
Z3_LIBRARIES-ADVANCED:INTERNAL=1
//Result of try_run()
Z3_RETURNCODE:INTERNAL=0
//ADVANCED property for variable: ZLIB_INCLUDE_DIR
ZLIB_INCLUDE_DIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_LIBRARY_DEBUG
ZLIB_LIBRARY_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: ZLIB_LIBRARY_RELEASE
ZLIB_LIBRARY_RELEASE-ADVANCED:INTERNAL=1
//Making sure VCPKG_MANIFEST_MODE doesn't change
Z_VCPKG_CHECK_MANIFEST_MODE:INTERNAL=OFF
//The path to the PowerShell implementation to use.
Z_VCPKG_POWERSHELL_PATH:INTERNAL=B:/tools/pwsh/bin/pwsh.exe
//Vcpkg root directory
Z_VCPKG_ROOT_DIR:INTERNAL=D:/env/sdks/vcpkg
//Have symbol backtrace
_Backtrace_SYM_FOUND:INTERNAL=
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=W:/llvm/v15.0.1/src/llvm/out/install/x64-Release
//Path to a program.
_Python3_EXECUTABLE:INTERNAL=B:/tools/python/python.exe
//Python3 Properties
_Python3_INTERPRETER_PROPERTIES:INTERNAL=Python;3;11;0;64;;cp311-win_amd64;B:\tools\python\Lib;B:\tools\python\Lib;B:\tools\python\Lib\site-packages;B:\tools\python\Lib\site-packages
_Python3_INTERPRETER_SIGNATURE:INTERNAL=8ef5986abcdc4dc24e6b16f7c031abf9
__pkg_config_arguments_PC_LIBXML:INTERNAL=QUIET;libxml-2.0
__pkg_config_checked_NCURSES:INTERNAL=1
__pkg_config_checked_PC_LIBEDIT:INTERNAL=1
__pkg_config_checked_PC_LIBXML:INTERNAL=1
//Result of TRY_COMPILE
errc_compiled:INTERNAL=TRUE
//Result of try_run()
errc_exit_code:INTERNAL=0
//Have symbol os_signpost_interval_begin
macos_signposts_available:INTERNAL=
//ADVANCED property for variable: pkgcfg_lib_PC_LIBXML_libxml2
pkgcfg_lib_PC_LIBXML_libxml2-ADVANCED:INTERNAL=1
//ADVANCED property for variable: pkgcfg_lib_PC_LIBXML_lzma
pkgcfg_lib_PC_LIBXML_lzma-ADVANCED:INTERNAL=1
//ADVANCED property for variable: pkgcfg_lib_PC_LIBXML_zlib
pkgcfg_lib_PC_LIBXML_zlib-ADVANCED:INTERNAL=1
prefix_result:INTERNAL=D:/env/sdks/vcpkg/installed/x64-windows/lib
//Result of TRY_COMPILE
try_compile_result:INTERNAL=FALSE

