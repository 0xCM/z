{
    "conceptual": "\n<p sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\">A function template that creates and returns an object of a type that implements a general-purpose (but not observable) collection. The object is returned as an <a href=\"/uwp/api/windows.foundation.collections.ivector_t_\" data-raw-source=\"[**IVector**](/uwp/api/windows.foundation.collections.ivector_t_)\" sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"15\" sourceendlinenumber=\"15\"><strong>IVector</strong></a>, and that&#39;s the interface via which you call the returned object&#39;s functions and properties.</p>\n<p sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"17\" sourceendlinenumber=\"17\">You can optionally pass an existing <strong>std::vector</strong> <em>rvalue</em> into the function&mdash;either pass a temporary object, or call <strong>std::move</strong> on an <em>lvalue</em>.</p>\n<p sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"19\" sourceendlinenumber=\"19\">For more info, and code examples, see <a href=\"/windows/uwp/cpp-and-winrt-apis/collections\" data-raw-source=\"[Collections with C++/WinRT](/windows/uwp/cpp-and-winrt-apis/collections)\" sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"19\" sourceendlinenumber=\"19\">Collections with C++/WinRT</a>.</p>\n<h2 id=\"syntax\" sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"21\" sourceendlinenumber=\"21\">Syntax</h2>\n<pre sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"22\" sourceendlinenumber=\"25\"><code class=\"lang-cppwinrt\">template &lt;typename T, typename Allocator = std::allocator&lt;T&gt;&gt;\nwinrt::Windows::Foundation::Collections::IVector&lt;T&gt; single_threaded_vector(std::vector&lt;T, Allocator&gt;&amp;&amp; values = {});\n</code></pre><h3 id=\"template-parameters\" sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"27\" sourceendlinenumber=\"27\">Template parameters</h3>\n<p sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"28\" sourceendlinenumber=\"29\"><code>typename T</code>\nThe type of the elements of the collection.</p>\n<p sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"31\" sourceendlinenumber=\"32\"><code>typename Allocator</code>\nThe type of the allocator of the vector from which you initialize the collection, if you pass one, otherwise the default allocator.</p>\n<h3 id=\"parameters\" sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"34\" sourceendlinenumber=\"34\">Parameters</h3>\n<p sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"35\" sourceendlinenumber=\"36\"><code>values</code>\nAn optional reference to an <em>rvalue</em> of type <strong>std::vector</strong> from which to initialize the elements of the collection object.</p>\n<h3 id=\"return-value\" sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"38\" sourceendlinenumber=\"38\">Return value</h3>\n<p sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"39\" sourceendlinenumber=\"39\">An <a href=\"/uwp/api/windows.foundation.collections.ivector_t_\" data-raw-source=\"[**IVector**](/uwp/api/windows.foundation.collections.ivector_t_)\" sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"39\" sourceendlinenumber=\"39\"><strong>IVector</strong></a> representing a new collection object.</p>\n<h2 id=\"requirements\" sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"41\" sourceendlinenumber=\"41\">Requirements</h2>\n<p sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"42\" sourceendlinenumber=\"42\"><strong>Minimum supported SDK:</strong> Windows SDK version 10.0.17763.0 (Windows 10, version 1809)</p>\n<p sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"44\" sourceendlinenumber=\"44\"><strong>Namespace:</strong> winrt</p>\n<p sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"46\" sourceendlinenumber=\"46\"><strong>Header:</strong> %WindowsSdkDir%Include&lt;WindowsTargetPlatformVersion&gt;\\cppwinrt\\winrt\\base.h (included by default)</p>\n<h2 id=\"see-also\" sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"48\" sourceendlinenumber=\"48\">See also</h2>\n<ul sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"49\" sourceendlinenumber=\"51\">\n<li sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"49\" sourceendlinenumber=\"49\"><a href=\"~/cpp-ref-for-winrt/winrt.md\" data-raw-source=\"[winrt namespace](winrt.md)\" sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"49\" sourceendlinenumber=\"49\">winrt namespace</a></li>\n<li sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"50\" sourceendlinenumber=\"50\"><a href=\"~/cpp-ref-for-winrt/vector-base.md\" data-raw-source=\"[winrt::vector_base struct template](vector-base.md)\" sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"50\" sourceendlinenumber=\"50\">winrt::vector_base struct template</a></li>\n<li sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"51\" sourceendlinenumber=\"51\"><a href=\"/windows/uwp/cpp-and-winrt-apis/collections\" data-raw-source=\"[Collections with C++/WinRT](/windows/uwp/cpp-and-winrt-apis/collections)\" sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"51\" sourceendlinenumber=\"51\">Collections with C++/WinRT</a></li>\n</ul>\n",
    "type": "Conceptual",
    "source": {
        "remote": {
            "path": "winrt-related-src/cpp-ref-for-winrt/single-threaded-vector.md",
            "branch": "docs",
            "repo": "https://github.com/MicrosoftDocs/winrt-related.git"
        },
        "startLine": 0,
        "endLine": 0,
        "isExternal": false
    },
    "path": "cpp-ref-for-winrt/single-threaded-vector.md",
    "documentation": {
        "remote": {
            "path": "winrt-related-src/cpp-ref-for-winrt/single-threaded-vector.md",
            "branch": "docs",
            "repo": "https://github.com/MicrosoftDocs/winrt-related.git"
        },
        "startLine": 0,
        "endLine": 0,
        "isExternal": false
    },
    "feedback_github_repo": "MicrosoftDocs/winrt-related",
    "feedback_system": "GitHub",
    "ROBOTS": "INDEX, FOLLOW",
    "author": "stevewhims",
    "ms.author": "stwhi",
    "feedback_product_url": "https://docs.microsoft.com/answers/topics/uwp.html?sort=active&filter=all",
    "breadcrumb_path": "/uwp/breadcrumbs/toc.json",
    "_docfxVersion": "2.59.3.0",
    "titleSuffix": "Windows UWP applications",
    "_op_documentIdPathDepotMapping": {
        "./": {
            "depot_name": "MSDN.winrt-related",
            "folder_relative_path_in_docset": "./"
        }
    },
    "keywords": "windows 10, uwp, standard, c++, cpp, winrt, projection, api, reference, collection",
    "extendBreadcrumb": true,
    "searchScope": [
        "UWP"
    ],
    "ms.technology": "winrt-reference",
    "ms.prod": "uwp",
    "uhfHeaderId": "MSDocsHeader-WinDevCenter",
    "_systemKeys": [
        "conceptual",
        "type",
        "source",
        "path",
        "documentation",
        "title",
        "rawTitle",
        "wordCount"
    ],
    "rawTitle": "<h1 id=\"winrtsinglethreadedvector-function-template-cwinrt\" sourcefile=\"cpp-ref-for-winrt/single-threaded-vector.md\" sourcestartlinenumber=\"13\" sourceendlinenumber=\"13\">winrt::single_threaded_vector function template (C++/WinRT)</h1>",
    "title": "winrt::single_threaded_vector function template (C++/WinRT)",
    "description": "A function template that creates and returns an object of a type that implements a general-purpose collection. The object is returned as an **IVector**.",
    "ms.topic": "language-reference",
    "dev_langs": [
        "C++"
    ],
    "ms.date": "08/25/2018",
    "ms.workload": [
        "cplusplus"
    ],
    "wordCount": 181,
    "_lang": "csharp",
    "_tocPath": "toc.html",
    "_navPath": "toc.html",
    "_rel": "../",
    "_path": "cpp-ref-for-winrt/single-threaded-vector.html",
    "_key": "cpp-ref-for-winrt/single-threaded-vector.md",
    "_navRel": "../toc.html",
    "_tocRel": "../toc.html",
    "_navKey": "~/toc.yml",
    "_tocKey": "~/toc.yml",
    "__global": {
        "namespacesInSubtitle": "Namespaces",
        "classesInSubtitle": "Classes",
        "structsInSubtitle": "Structs",
        "interfacesInSubtitle": "Interfaces",
        "enumsInSubtitle": "Enums",
        "delegatesInSubtitle": "Delegates",
        "constructorsInSubtitle": "Constructors",
        "fieldsInSubtitle": "Fields",
        "propertiesInSubtitle": "Properties",
        "methodsInSubtitle": "Methods",
        "eventsInSubtitle": "Events",
        "operatorsInSubtitle": "Operators",
        "eiisInSubtitle": "Explicit Interface Implementations",
        "functionsInSubtitle": "Functions",
        "variablesInSubtitle": "Variables",
        "typeAliasesInSubtitle": "Type Aliases",
        "membersInSubtitle": "Members",
        "improveThisDoc": "Improve this Doc",
        "viewSource": "View Source",
        "inheritance": "Inheritance",
        "inheritedMembers": "Inherited Members",
        "package": "Package",
        "namespace": "Namespace",
        "assembly": "Assembly",
        "syntax": "Syntax",
        "overrides": "Overrides",
        "implements": "Implements",
        "remarks": "Remarks",
        "examples": "Examples",
        "seealso": "See Also",
        "declaration": "Declaration",
        "parameters": "Parameters",
        "typeParameters": "Type Parameters",
        "type": "Type",
        "name": "Name",
        "description": "Description",
        "returns": "Returns",
        "fieldValue": "Field Value",
        "propertyValue": "Property Value",
        "eventType": "Event Type",
        "variableValue": "Variable Value",
        "typeAliasType": "Type Alias Type",
        "exceptions": "Exceptions",
        "condition": "Condition",
        "extensionMethods": "Extension Methods",
        "note": "<h5>Note</h5>",
        "warning": "<h5>Warning</h5>",
        "tip": "<h5>Tip</h5>",
        "important": "<h5>Important</h5>",
        "caution": "<h5>Caution</h5>",
        "tocToggleButton": "Show / Hide Table of Contents",
        "tocFilter": "Enter here to filter...",
        "search": "Search",
        "searchResults": "Search Results for",
        "pageFirst": "First",
        "pagePrev": "Previous",
        "pageNext": "Next",
        "pageLast": "Last",
        "inThisArticle": "In This Article",
        "backToTop": "Back to top",
        "_shared": {}
    }
}