| Identifier       | Name             | Type            | Description                                                                                                                                                                                                  |
| Size             | Size             | int             |                                                                                                                                                                                                              |
| Predicates       | Predicates       | list<Predicate> |                                                                                                                                                                                                              |
| OpCode           | Opcode           | bits<8>         | Single byte value indicating the opcode within the various X86 opcode maps. For most instructions this the value between prefixes and the ModRM byte.                                                        |
| Form             | Form             | FormKind        | Classifies how operands are encoded into the various fields that encode operands, i.e. modrm.reg, modrm.rm, vex.vvvv, rex.r, rex.x, rex.b, etc. See format list below.                                       |
| FormBits         | FormBits         | bits<7>         |                                                                                                                                                                                                              |
| ImmT             | ImmT             | ImmKind         | Determines the size of the immediate, if any at the end of the instruction.                                                                                                                                  |
| OpSize           | OpSize           | OpSizeKind      | Used to inciate instructions that need a 0x66 operand size prefix to encode 16-bit operands in 32 mode or 32-bit operands in 16-bit mode.                                                                    |
| OpSizeBits       | OpSizeBits       | bits<2>         |
| AdSize           | AdSize           | AdSizeKind      | Used to mark instructions that need to emit a 0x67 address size prefix in 32-bit mode or 16-bit mode. This is rarely used and is only needed by instructions that don't use an address encoded in modrm/sib. |
| AdSizeBits       | AdSizeBits       | bits<2>         |
| OpPrefix         | OpPrefix         | OpPrefixKind    | Encodes whether the instruction requires a 0x66, 0xf2, or 0xf3 prefix. For 0x66 this is primarily used by SSE instructions where 0x66 is different than the 0x66 operand size prefix above.                  |
| OpPrefixBits     | OpPrefixBits     | bits<3>         |
| OpMap            | OpMap            | OpMapKind       | Which one of the opcode maps this instruction belows to. Corresponds to the one byte, two byte, three byte 0x0f 0x38, three byte 0x0f 0x3a, etc. maps from the Intel SDM.                                    |
| OpMapBits        | OpMapBits        | bits<3>         |
| HasRexWPrefix    | hasREX_WPrefix   | bit             | Indicates the instruction requires the REX.W it to be set.                                                                                                                                                   |
| HasLockPrefix    | hasLockPrefix    | bit             | Indicates the instruction should be encoded with a 0xF0 lock prefix.                                                                                                                                         |
| HasREPPrefix     | hasREPPrefix     | bit             | Indicates the instruction should be encoded with a 0xF3 rep prefix.                                                                                                                                          |
| OpEnc            | OpEnc            | EncodingKind    | Which encoding scheme this instruction uses. Normal, VEX, EVEX, or XOP.                                                                                                                                      |
| OpEncBits        | OpEncBits        | bits<2>         |
| VexWPrefix       | VEX_WPrefix      | bit             | Controls the value of the VEX.W bit in the encoder also tells the disassembler which instructions ignore VEX.W.                                                                                              |
| HasVex4V         | hasVEX_4V        | bit             | Does this instruction use VEX.vvvv                                                                                                                                                                           |
| HasVexL          | hasVEX_L         | bit             | Should this instruction be encoded with VEX.L=1                                                                                                                                                              |
| IngoresVexL      | ignoresVEX_L     | bit             | Tells the disassembler that VEX.L should be ignored                                                                                                                                                          |
| HasEvexK         | hasEVEX_K        | bit             | Does this instruction use a k-register for masking                                                                                                                                                           |
| HasEvexZ         | hasEVEX_Z        | bit             | Is the k-register used for zero masking or merge masking.                                                                                                                                                    |
| HasEvexL2        | hasEVEX_L2       | bit             | Should this instruction be encoded with EVEX.L'=1                                                                                                                                                            |
| HasEvexB         | hasEVEX_B        | bit             | Should this instruction be encoded with EVEX.b=1                                                                                                                                                             |
| Cd8Form          | CD8_Form         | bits<3>         | Format for compressed disp8 for EVEX instructions                                                                                                                                                            |
| Cd8EltSize       | CD8_EltSize      | int             | Element size for compressed displacement                                                                                                                                                                     |
| HasEvexRC        | hasEVEX_RC       | bit             | Indicates that EVEX.L'L should be used for embedded rounding control                                                                                                                                         |
| HasNoTrackPrefix | hasNoTrackPrefix | bit             | Instruction has notrack prefix. Should only occur on indirect calls and jumps.                                                                                                                               |
| VectSize         | VectSize         | bits<7>         |
| Cd8Scale         | CD8_Scale        | bits<7>         |