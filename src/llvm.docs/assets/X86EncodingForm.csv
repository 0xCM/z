Identifier     | Name           | Description                                                                                                                                                                                                                                                               |
Pseudo         | Pseudo         | No encoding/disassembling information is present. These should be removed/replaced with other instructions before we reach the encoding phase of codegen.RawFrm         - Instruction has no modrm byte. Operands are fixed registers. There may be an immediate present. |
RawFrm         | RawFrm         | This form is for instructions that don't have any operands, so they are just a fixed opcode value, like 'leave'.                                                                                                                                                          |
AddRegFrm      | AddRegFrm      | Instruction encodes a register in bits 2:0 of the opcode. No modrm byte. Opcode should be a multiple of 8 for such an instruction.                                                                                                                                        |
RawFrmMemOffs  | RawFrmMemOffs  | Instruction encodes a fixed constant address in the instruction without modrm byte. Basically opcodes 0xA0-0xA3                                                                                                                                                           |
RawFrmSrc      | RawFrmSrc      | Instruction uses SI/ESI/RSI as a source memory address. LODS and OUTS.                                                                                                                                                                                                    |
RawFrmDst      | RawFrmDst      | Instruction uses DI/EDI/RDI as a destinatino memory address. Input in AL/AX/EAX/RAX for SCAS/STOS. Or DX for INS.                                                                                                                                                         |
RawFrmDstSrc   | RawFrmDstSrc   | Instruction uses SI/ESI/RSI as a source memory address and DI/EDI/RDI as a destination memory address. MOVS and CMPS instructions.                                                                                                                                        |
RawFrmImm8     | RawFrmImm8     | Rare instruction that has two immediates. The first is 8-bits the second one is controlled by ImmT field.                                                                                                                                                                 |
RawFrmImm16    | RawFrmImm16    | Rare instruction that has two immediates. The first is 16-bits the second one is controlled by ImmT field.                                                                                                                                                                |
MRMDestMem     | MRMDestMem     | modrm.mod!=0x3, modrm[2:0] and optional sib byte and displacement encode destination memory address. vex.vvvv is used encodes the next register, modrm[5:3] encodes destination register.                                                                                 |
MRMSrcMem      | MRMSrcMem      | modrm.mod!=0x3, modrm[5:3] encodes destination register. if vex.vvvv is used it encodes the next register, modrm[2:0] encodes second or third source register                                                                                                             |
MRMSrcMem4VOp3 | MRMSrcMem4VOp3 | like MRMSrcMem, but vex.vvvv and memory operand are swapped. Rarely used.                                                                                                                                                                                                 |
MRMSrcMemOp4   | MRMSrcMemOp4   | like MRMSrcMem, but a second source register is encoded in bits [7:4] of an immediate. Memory is the 4th operand. Rarely used.                                                                                                                                            |
MRMXm          | MRMXm          | modrm.mod==0x3, with a value of 0 in modrm[5:3]. modrm[2:0] and optional sib byte and displacement encode memory address. This is almost the same as MRM0m, but the disassembler ignores modrm[5:3]                                                                       |
MRM0m_MRM7m    | MRM0m-MRM7m    | modrm.mod!=0x3, with a fixed value(0-7) in modrm[5:3]. modrm[2:0] and optional sib byte and displacement encode memory address.                                                                                                                                           |
MRMDestReg     | MRMDestReg     | modrm.mod==0x3, modrm[2:0] encodes destination register. if vex.vvvv is used encodes the next register, mrm[5:3] encodes the second or third register.                                                                                                                    |
MRMSrcReg      | MRMSrcReg      | modrm.mod==0x3, modrm[5:3] encodes destination register. if vex.vvvv is used encodes the next register, mrm[2:0] encodes the second or third register.                                                                                                                    |
MRMSrcReg4VOp3 | MRMSrcReg4VOp3 | like MRMSrcReg, but vex.vvvv and memory operand are swapped. Rarely used                                                                                                                                                                                                  |
MRMSrcRegOp4   | MRMSrcRegOp4   | like MRMSrcReg, but a second source register is encoded in bits [7:4] of an immediate. modrm[2:0] encodes the 4th operand. Rarely used                                                                                                                                    |
MRMXr          | MRMXr          | modrm.mod==0x3, with a value of 0 in modrm[5:3]. modrm[2:0] encodes a register. This is almost the same as MRM0r, but the disassembler ignores modrm[5:3]                                                                                                                 |
MRM0r_MRM7r    | MRM0r-MRM7r    | modrm.mod==0x3, with a fixed value(0-7) in modrm[5:3]. modrm[2:0] encode a register                                                                                                                                                                                       |
MRMC0_MRMFF    | MRMC0-MRM_FF   | Instruction encodes with a fixed value in the range 0xC0-0xFF in the modrm byte. e.g. VMCALL, MONITOR. No known instructions use a fixed value in 0x00-0xBF range.                                                                                                        |
